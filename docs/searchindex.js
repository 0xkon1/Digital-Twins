Search.setIndex({"docnames": ["autoapi/index", "autoapi/src/app/index", "autoapi/src/config/index", "autoapi/src/digitaltwin/data_to_db/index", "autoapi/src/digitaltwin/get_data_using_geoapis/index", "autoapi/src/digitaltwin/index", "autoapi/src/digitaltwin/instructions_records_to_db/index", "autoapi/src/digitaltwin/run/index", "autoapi/src/digitaltwin/setup_environment/index", "autoapi/src/digitaltwin/tables/index", "autoapi/src/digitaltwin/utils/index", "autoapi/src/dynamic_boundary_conditions/hirds_rainfall_data_from_db/index", "autoapi/src/dynamic_boundary_conditions/hirds_rainfall_data_to_db/index", "autoapi/src/dynamic_boundary_conditions/hydrograph/index", "autoapi/src/dynamic_boundary_conditions/hyetograph/index", "autoapi/src/dynamic_boundary_conditions/index", "autoapi/src/dynamic_boundary_conditions/main_rainfall/index", "autoapi/src/dynamic_boundary_conditions/main_river/index", "autoapi/src/dynamic_boundary_conditions/main_tide_slr/index", "autoapi/src/dynamic_boundary_conditions/osm_waterways/index", "autoapi/src/dynamic_boundary_conditions/rainfall_data_from_hirds/index", "autoapi/src/dynamic_boundary_conditions/rainfall_enum/index", "autoapi/src/dynamic_boundary_conditions/rainfall_model_input/index", "autoapi/src/dynamic_boundary_conditions/rainfall_sites/index", "autoapi/src/dynamic_boundary_conditions/rec1_osm_match/index", "autoapi/src/dynamic_boundary_conditions/river_data_to_from_db/index", "autoapi/src/dynamic_boundary_conditions/river_enum/index", "autoapi/src/dynamic_boundary_conditions/river_model_input/index", "autoapi/src/dynamic_boundary_conditions/river_network_for_aoi/index", "autoapi/src/dynamic_boundary_conditions/sea_level_rise_data/index", "autoapi/src/dynamic_boundary_conditions/thiessen_polygons/index", "autoapi/src/dynamic_boundary_conditions/tide_data_from_niwa/index", "autoapi/src/dynamic_boundary_conditions/tide_enum/index", "autoapi/src/dynamic_boundary_conditions/tide_query_location/index", "autoapi/src/dynamic_boundary_conditions/tide_slr_combine/index", "autoapi/src/dynamic_boundary_conditions/tide_slr_model_input/index", "autoapi/src/flood_model/bg_flood_model/index", "autoapi/src/flood_model/index", "autoapi/src/flood_model/serve_model/index", "autoapi/src/index", "autoapi/src/run_all/index", "autoapi/src/tasks/index", "index"], "filenames": ["autoapi/index.rst", "autoapi/src/app/index.rst", "autoapi/src/config/index.rst", "autoapi/src/digitaltwin/data_to_db/index.rst", "autoapi/src/digitaltwin/get_data_using_geoapis/index.rst", "autoapi/src/digitaltwin/index.rst", "autoapi/src/digitaltwin/instructions_records_to_db/index.rst", "autoapi/src/digitaltwin/run/index.rst", "autoapi/src/digitaltwin/setup_environment/index.rst", "autoapi/src/digitaltwin/tables/index.rst", "autoapi/src/digitaltwin/utils/index.rst", "autoapi/src/dynamic_boundary_conditions/hirds_rainfall_data_from_db/index.rst", "autoapi/src/dynamic_boundary_conditions/hirds_rainfall_data_to_db/index.rst", "autoapi/src/dynamic_boundary_conditions/hydrograph/index.rst", "autoapi/src/dynamic_boundary_conditions/hyetograph/index.rst", "autoapi/src/dynamic_boundary_conditions/index.rst", "autoapi/src/dynamic_boundary_conditions/main_rainfall/index.rst", "autoapi/src/dynamic_boundary_conditions/main_river/index.rst", "autoapi/src/dynamic_boundary_conditions/main_tide_slr/index.rst", "autoapi/src/dynamic_boundary_conditions/osm_waterways/index.rst", "autoapi/src/dynamic_boundary_conditions/rainfall_data_from_hirds/index.rst", "autoapi/src/dynamic_boundary_conditions/rainfall_enum/index.rst", "autoapi/src/dynamic_boundary_conditions/rainfall_model_input/index.rst", "autoapi/src/dynamic_boundary_conditions/rainfall_sites/index.rst", "autoapi/src/dynamic_boundary_conditions/rec1_osm_match/index.rst", "autoapi/src/dynamic_boundary_conditions/river_data_to_from_db/index.rst", "autoapi/src/dynamic_boundary_conditions/river_enum/index.rst", "autoapi/src/dynamic_boundary_conditions/river_model_input/index.rst", "autoapi/src/dynamic_boundary_conditions/river_network_for_aoi/index.rst", "autoapi/src/dynamic_boundary_conditions/sea_level_rise_data/index.rst", "autoapi/src/dynamic_boundary_conditions/thiessen_polygons/index.rst", "autoapi/src/dynamic_boundary_conditions/tide_data_from_niwa/index.rst", "autoapi/src/dynamic_boundary_conditions/tide_enum/index.rst", "autoapi/src/dynamic_boundary_conditions/tide_query_location/index.rst", "autoapi/src/dynamic_boundary_conditions/tide_slr_combine/index.rst", "autoapi/src/dynamic_boundary_conditions/tide_slr_model_input/index.rst", "autoapi/src/flood_model/bg_flood_model/index.rst", "autoapi/src/flood_model/index.rst", "autoapi/src/flood_model/serve_model/index.rst", "autoapi/src/index.rst", "autoapi/src/run_all/index.rst", "autoapi/src/tasks/index.rst", "index.rst"], "titles": ["API Reference", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.app</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.digitaltwin.data_to_db</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.digitaltwin.get_data_using_geoapis</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.digitaltwin</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.digitaltwin.instructions_records_to_db</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.digitaltwin.run</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.digitaltwin.setup_environment</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.digitaltwin.tables</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.digitaltwin.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.dynamic_boundary_conditions.hirds_rainfall_data_from_db</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.dynamic_boundary_conditions.hirds_rainfall_data_to_db</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.dynamic_boundary_conditions.hydrograph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.dynamic_boundary_conditions.hyetograph</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.dynamic_boundary_conditions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.dynamic_boundary_conditions.main_rainfall</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.dynamic_boundary_conditions.main_river</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.dynamic_boundary_conditions.main_tide_slr</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.dynamic_boundary_conditions.osm_waterways</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.dynamic_boundary_conditions.rainfall_data_from_hirds</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.dynamic_boundary_conditions.rainfall_enum</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.dynamic_boundary_conditions.rainfall_model_input</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.dynamic_boundary_conditions.rainfall_sites</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.dynamic_boundary_conditions.rec1_osm_match</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.dynamic_boundary_conditions.river_data_to_from_db</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.dynamic_boundary_conditions.river_enum</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.dynamic_boundary_conditions.river_model_input</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.dynamic_boundary_conditions.river_network_for_aoi</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.dynamic_boundary_conditions.sea_level_rise_data</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.dynamic_boundary_conditions.thiessen_polygons</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.dynamic_boundary_conditions.tide_data_from_niwa</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.dynamic_boundary_conditions.tide_enum</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.dynamic_boundary_conditions.tide_query_location</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.dynamic_boundary_conditions.tide_slr_combine</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.dynamic_boundary_conditions.tide_slr_model_input</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.flood_model.bg_flood_model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.flood_model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.flood_model.serve_model</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.run_all</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">src.tasks</span></code>", "Welcome to Digital Twin for Flood Resilience in Aotearoa New Zealand\u2019s documentation!"], "terms": {"thi": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 22, 23, 24, 25, 27, 28, 29, 30, 35, 36, 40], "page": [0, 42], "contain": [0, 3, 6, 9, 11, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36], "auto": 0, "gener": [0, 4, 13, 14, 16, 17, 18, 22, 27, 28, 31, 34, 35, 36], "document": 0, "1": [0, 2, 11, 14, 31, 33, 34, 36, 39], "src": [0, 42], "digitaltwin": [0, 16, 17, 18, 36, 39, 40, 42], "data_to_db": [0, 5, 39], "get_data_using_geoapi": [0, 5, 39], "instructions_records_to_db": [0, 5, 39], "run": [0, 1, 5, 36, 39, 40], "setup_environ": [0, 5, 39], "tabl": [0, 3, 5, 6, 7, 12, 39], "util": [0, 5, 7, 9, 16, 17, 18, 36, 39, 40], "dynamic_boundary_condit": [0, 39, 42], "hirds_rainfall_data_from_db": [0, 15, 39], "hirds_rainfall_data_to_db": [0, 15, 39], "hydrograph": [0, 15, 27, 39], "hyetograph": [0, 15, 21, 22, 39], "main_rainfal": [0, 15, 39], "main_riv": [0, 15, 39], "main_tide_slr": [0, 15, 39], "osm_waterwai": [0, 15, 39], "rainfall_data_from_hird": [0, 15, 39], "rainfall_enum": [0, 14, 15, 22, 39], "rainfall_model_input": [0, 15, 39], "rainfall_sit": [0, 15, 39], "rec1_osm_match": [0, 15, 39], "river_data_to_from_db": [0, 15, 39], "river_enum": [0, 13, 15, 39], "river_model_input": [0, 15, 39], "river_network_for_aoi": [0, 15, 39], "sea_level_rise_data": [0, 15, 39], "thiessen_polygon": [0, 15, 39], "tide_data_from_niwa": [0, 15, 39], "tide_enum": [0, 15, 31, 39], "tide_query_loc": [0, 15, 31, 39], "tide_slr_combin": [0, 15, 39], "tide_slr_model_input": [0, 15, 39], "flood_model": [0, 39, 42], "bg_flood_model": [0, 37, 39], "serve_model": [0, 37, 39], "app": [0, 39, 41, 42], "config": [0, 39, 42], "run_al": [0, 39, 42], "task": [0, 39, 42], "creat": [0, 8, 9, 14, 17, 22, 28, 30, 41], "sphinx": 0, "autoapi": 0, "health_check": 1, "flask": 1, "respons": 1, "ping": 1, "endpoint": 1, "check": [1, 6, 9], "server": [1, 8], "i": [1, 2, 3, 4, 6, 10, 11, 13, 14, 20, 22, 24, 31, 33, 34, 36], "up": [1, 8, 14, 34], "get_statu": 1, "task_id": 1, "remove_task": 1, "generate_model": 1, "get_wfs_layer_latest_model": 1, "model_id": 1, "create_wkt_from_coord": 1, "lat1": 1, "float": [1, 2, 11, 13, 14, 20, 24, 31, 36], "lng1": 1, "lat2": 1, "lng2": 1, "str": [1, 2, 3, 4, 6, 8, 9, 11, 12, 14, 20, 21, 23, 26, 31, 32, 34, 36, 38, 41], "get_depth_at_point": 1, "valid_coordin": 1, "latitud": [1, 31], "longitud": [1, 31], "bool": [1, 2, 3, 4, 9, 11, 12, 13, 20, 34], "gunicorn_logg": 1, "t": [2, 9], "get_env_vari": 2, "var_nam": 2, "default": [2, 3, 4, 9, 10, 11, 24, 31, 33, 34, 36], "none": [2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 25, 27, 29, 30, 31, 35, 36, 40], "allow_empti": 2, "fals": [2, 3, 4, 9, 11, 12, 13, 20, 34], "cast_to": 2, "type": [2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 40], "read": [2, 6, 17, 18, 25, 29], "an": [2, 4, 6, 8, 9, 13, 31, 34, 41], "environ": [2, 4, 8], "variabl": [2, 4, 8, 36], "set": [2, 3, 4, 8, 10, 11, 12, 13, 20, 34, 36], "allow": 2, "empti": [2, 3], "valu": [2, 3, 4, 6, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 22, 23, 24, 25, 27, 29, 30, 31, 34, 35, 36], "cast": 2, "To": [2, 4], "boolean": 2, "example_env_var": 2, "us": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 40, 41], "paramet": [2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36], "The": [2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 17, 20, 22, 23, 24, 25, 27, 29, 30, 31, 33, 34, 35, 36], "name": [2, 3, 8, 9, 12, 13, 20, 22, 36], "retriev": [2, 3, 4, 6, 7, 11, 14, 19, 25, 29, 30, 31, 33, 36], "return": [2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36], "doe": [2, 3, 6, 9, 10, 12, 14, 16, 17, 18, 19, 22, 23, 25, 27, 29, 30, 35, 36], "exist": [2, 3, 6, 9, 16, 17, 18, 25, 29], "doesn": [2, 9], "overrid": 2, "string": [2, 20, 23, 36], "var": 2, "If": [2, 3, 4, 6, 8, 9, 11, 13, 14, 25, 29, 30, 31, 33, 34, 36], "keyerror": 2, "rais": [2, 3, 4, 6, 8, 9, 11, 13, 14, 25, 29, 30, 31, 33, 34, 36], "callabl": 2, "eg": 2, "int": [2, 3, 4, 6, 9, 10, 13, 14, 20, 24, 28, 31, 33, 34, 36], "valueerror": [2, 4, 6, 8, 11, 13, 14, 30, 31, 33, 34], "compat": 2, "store": [2, 3, 6, 7, 12, 16, 17, 18, 19, 23, 25, 29, 30, 36], "_cast_str": 2, "str_to_cast": 2, "take": [2, 34], "necessari": [2, 4], "primit": 2, "builtin": 2, "test": 2, "For": [2, 31, 36], "detect": 2, "case": 2, "insensit": 2, "true": [2, 9, 11, 12, 13, 20, 34], "f": 2, "0": [2, 10, 11, 20, 34, 36, 39], "exampl": 2, "go": 2, "e": [2, 13, 20, 22, 31], "g": [2, 20, 31], "defin": [2, 19, 28], "script": [3, 4, 6, 7, 8, 9, 10, 13, 16, 17, 18, 19, 24, 25, 28, 29, 36, 40], "fetch": [3, 4, 16, 17, 18, 19, 20, 23, 31, 33], "geospati": [3, 6, 7, 9, 10], "data": [3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35], "from": [3, 4, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 20, 23, 24, 25, 28, 29, 30, 31, 33, 36], "variou": [3, 7, 9], "provid": [3, 4, 6, 7, 8, 9, 10, 13, 19, 28, 29, 30, 31, 34, 36], "geoapi": [3, 4, 7], "librari": [3, 4, 7, 10], "databas": [3, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 23, 24, 25, 29, 30, 33, 36], "It": [3, 4, 7, 9, 24, 31], "also": [3, 24], "save": [3, 36], "user": [3, 7], "log": [3, 6, 7, 8, 9, 10, 12, 18, 22, 23, 25, 27, 29, 30, 35, 36], "inform": [3, 7, 14, 19, 22, 24, 28, 29, 30, 31, 33, 34], "except": [3, 9, 33, 41], "nononintersectionerror": 3, "base": [3, 4, 8, 9, 10, 13, 14, 20, 21, 24, 26, 31, 32, 33, 34, 36, 41], "when": [3, 4, 9, 13, 14, 31, 33, 36], "non": [3, 33], "intersect": [3, 12, 19, 22, 24, 28, 30, 33], "area": [3, 9, 10, 11, 12, 14, 17, 19, 22, 24, 25, 28, 30, 33, 36, 41], "found": [3, 33, 36], "get_nz_geospatial_lay": 3, "engin": [3, 6, 8, 9, 10, 11, 12, 23, 24, 25, 29, 30, 33, 36], "sqlalchemi": [3, 6, 8, 9, 10, 11, 12, 23, 24, 25, 29, 30, 33, 36], "panda": [3, 6, 11, 14, 20, 22, 29, 31, 34, 35], "datafram": [3, 6, 11, 14, 20, 22, 27, 31, 34, 35], "layer": [3, 4, 6, 9], "have": 3, "coverag": [3, 9, 11, 12, 22, 30], "new": [3, 4, 10, 13, 30, 33, 36], "zealand": [3, 4, 10, 30, 33], "connect": [3, 6, 8, 9, 10, 11, 12, 23, 24, 25, 29, 30, 33, 36], "frame": [3, 6], "pd": [3, 6, 11, 14, 20, 22, 27, 29, 31, 34, 35], "get_non_nz_geospatial_lay": 3, "do": 3, "get_geospatial_layer_info": 3, "layer_row": 3, "seri": [3, 29, 41], "tupl": [3, 20, 31, 36], "extract": [3, 13, 24, 34], "singl": [3, 24, 29, 31], "entri": [3, 9], "A": [3, 4, 9, 10, 11, 13, 14, 17, 19, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36], "row": [3, 20, 24], "repres": [3, 9, 10, 11, 13, 17, 19, 20, 21, 22, 24, 25, 26, 28, 30, 31, 32, 33, 36], "along": [3, 13, 19, 24, 28], "its": [3, 6, 13, 14, 31, 36], "associ": [3, 9], "data_provid": [3, 4, 9], "layer_id": [3, 4, 9], "table_nam": [3, 9], "unique_column_nam": [3, 6, 9], "get_vector_data_id_not_in_db": 3, "vector_data": 3, "geopanda": [3, 4, 7, 10, 11, 12, 13, 16, 17, 18, 19, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 36, 40, 41], "geodatafram": [3, 4, 7, 10, 11, 12, 13, 16, 17, 18, 19, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 36, 40, 41], "area_of_interest": [3, 30], "get": [3, 6, 8, 10, 11, 12, 14, 17, 19, 20, 22, 23, 24, 28, 30, 31, 33, 34, 36], "id": [3, 4, 11, 12, 20], "ar": [3, 6, 8, 10, 11, 12, 13, 14, 19, 20, 22, 25, 29, 30, 31, 34, 36], "present": [3, 12, 31], "specifi": [3, 4, 10, 13, 14, 16, 17, 18, 19, 24, 25, 29, 30, 31, 33, 34, 36], "interest": [3, 30], "gpd": [3, 4, 10, 11, 12, 13, 17, 19, 22, 23, 24, 25, 28, 29, 30, 31, 33, 34, 36], "vector": [3, 4, 22], "uniqu": [3, 9, 20, 28], "column": [3, 9, 13, 14, 22, 28, 31, 33, 34], "nz_geospatial_layers_data_to_db": 3, "cr": [3, 4, 10, 36], "2193": [3, 4, 10], "verbos": [3, 4], "option": [3, 4, 9, 10, 11, 13, 14, 20, 22, 24, 31, 33, 34, 36], "coordin": [3, 4, 10, 24, 28, 29, 31, 36], "refer": [3, 4, 7, 10, 14, 34, 36, 42], "system": [3, 4, 10, 36], "code": [3, 4, 10], "whether": [3, 4, 13, 34, 36], "print": [3, 4], "messag": [3, 4, 10], "ani": [3, 6, 9, 10, 12, 14, 16, 17, 18, 19, 22, 23, 25, 27, 29, 30, 35, 36], "get_non_intersection_area_from_db": 3, "catchment_area": [3, 10, 17, 19, 22, 24, 25, 28, 30, 33, 36], "catchment": [3, 9, 10, 11, 12, 14, 17, 19, 22, 24, 25, 28, 30, 33, 36], "origin": [3, 31], "suggest": 3, "alreadi": [3, 9], "fulli": 3, "cover": [3, 22, 30], "process_new_non_nz_geospatial_lay": 3, "nz": [3, 4, 25, 29, 31], "process_existing_non_nz_geospatial_lay": 3, "record": [3, 6, 31], "identif": [3, 24], "non_nz_geospatial_layers_data_to_db": 3, "store_geospatial_layers_data_to_db": 3, "user_log_info_to_db": 3, "multipl": 4, "includ": [4, 13, 19, 22, 24, 33, 34, 36], "statsnz": 4, "linz": 4, "lri": 4, "mfe": 4, "access": 4, "each": [4, 6, 9, 12, 22, 24, 28, 30, 31, 36, 40], "you": 4, "ll": 4, "need": [4, 31], "api": [4, 31, 33, 42], "kei": [4, 9, 20, 31], "wfsquerybas": 4, "manag": 4, "detail": [4, 6, 29, 34], "http": [4, 31, 38], "govt": 4, "help": 4, "koordin": 4, "com": 4, "note": [4, 31], "geometry_nam": 4, "make": [4, 31], "wf": 4, "cql_filter": 4, "queri": [4, 9, 29, 31], "vari": [4, 21, 22], "between": [4, 13, 14, 19, 22, 24, 28, 31, 36], "follow": 4, "ld": 4, "shape": [4, 28], "place": 4, "still": 4, "geometri": [4, 9, 19, 28, 33, 36], "netloc_api": 4, "clean_fetched_vector_data": 4, "fetched_data": 4, "clean": [4, 13, 14], "perform": [4, 14], "transform": [4, 10, 14, 23], "fetch_vector_data_using_geoapi": 4, "bounding_polygon": 4, "other": [4, 31, 36], "support": [4, 14, 34], "bound": [4, 13, 26], "polygon": [4, 9, 11, 12, 22, 30, 40], "all": [4, 11, 12, 14, 22, 29, 30, 36], "unsupport": 4, "process": [6, 28, 36], "instructions_run": 6, "valid": [6, 11, 13, 14, 22, 31, 34, 36], "url": [6, 9, 20, 31], "instruct": 6, "field": 6, "them": [6, 36], "geospatial_lay": [6, 7, 9], "validate_url_reach": 6, "section": 6, "format": [6, 10, 11, 14, 20, 22], "reachabl": 6, "identifi": [6, 9, 13, 19, 24, 28, 33], "invalid": [6, 13, 31, 34], "unreach": 6, "validate_instruction_field": 6, "dict": [6, 28, 31, 40], "should": [6, 13, 34, 36], "either": [6, 9, 13, 22, 31], "coverage_area": [6, 9], "both": [6, 34], "union": [6, 13, 14, 24, 31, 36], "read_and_check_instructions_fil": 6, "file": [6, 8, 9, 16, 17, 18, 19, 22, 29, 36], "get_existing_geospatial_lay": 6, "get_non_existing_record": 6, "instructions_df": 6, "existing_layers_df": 6, "avail": [6, 10, 14, 34, 36], "store_instructions_records_to_db": 6, "autom": 7, "storag": 7, "popul": 7, "track": 7, "main": [7, 16, 17, 18, 36, 40], "selected_polygon_gdf": [7, 16, 17, 18, 36, 40], "log_level": [7, 10, 16, 17, 18, 36], "loglevel": [7, 10, 16, 17, 18, 36, 40], "debug": [7, 10, 16, 17, 18, 36], "sample_polygon": [7, 16, 17, 18, 36], "well": [8, 36], "oper": [8, 9], "get_databas": 8, "exit": 8, "program": 8, "fail": [8, 31], "operationalerror": 8, "get_connection_from_profil": 8, "configur": [8, 10], "one": [8, 31], "more": [8, 34], "credenti": 8, "miss": 8, "env": 8, "get_engin": 8, "host": 8, "port": 8, "db": 8, "usernam": 8, "password": 8, "hostnam": 8, "number": [8, 20, 31], "model": [9, 13, 16, 17, 18, 21, 22, 24, 27, 33, 35, 36, 41], "geospatiallay": 9, "__tablename__": 9, "unique_id": 9, "primari": 9, "can": [9, 13, 22, 31], "whole": 9, "countri": 9, "null": 9, "point": [9, 19, 24, 26, 28, 31, 33], "userloginfo": 9, "user_log_inform": 9, "source_table_list": 9, "list": [9, 12, 13, 20, 31], "created_at": 9, "timestamp": [9, 31, 36], "indic": [9, 10, 34], "wa": [9, 31], "datetim": [9, 31], "geometr": 9, "represent": [9, 36], "hydrodem": 9, "hydrological_dem": 9, "file_nam": 9, "hydrolog": [9, 24, 36], "dem": [9, 24, 36], "file_path": 9, "path": [9, 16, 17, 18, 22, 27, 35, 36, 38], "output": [9, 31, 36], "bgfloodmodeloutput": 9, "bg_flood_model_output": 9, "flood": [9, 13, 16, 17, 18, 21, 22, 24, 27, 33, 35, 36], "create_t": 9, "check_table_exist": 9, "schema": 9, "public": 9, "where": [9, 19, 24, 28, 36], "resid": 9, "otherwis": [9, 34], "execute_queri": 9, "execut": [9, 10, 36], "given": [9, 13, 34], "session": [9, 31], "error": [9, 10, 20], "occur": [9, 31, 41], "dure": 9, "manipul": 10, "enum": [10, 21, 26, 32], "intenum": 10, "differ": [10, 14, 20, 21, 26, 31, 32], "level": [10, 18, 29, 31, 32, 34, 35], "map": 10, "correspond": [10, 13, 19, 24, 28], "numer": 10, "critic": 10, "50": [10, 11, 13, 14, 34], "40": [10, 11, 14], "warn": 10, "30": [10, 11, 14, 31], "info": 10, "20": [10, 11, 13, 14], "10": [10, 11, 13, 14, 31], "notset": 10, "log_execution_info": 10, "setup_log": 10, "root": 10, "logger": 10, "captur": 10, "exclud": 10, "specif": [10, 12, 13, 14, 31, 34], "propag": 10, "addition": [10, 19, 28], "get_catchment_area": 10, "to_cr": 10, "convert": [10, 14, 20, 22, 31], "get_nz_boundari": 10, "boundari": [10, 17, 18, 19, 24, 28, 33, 35, 36], "which": [10, 13, 22, 31, 34], "rainfal": [11, 12, 14, 16, 20, 21, 22, 23, 30], "site": [11, 12, 14, 20, 22, 23, 30], "within": [11, 12, 14, 22, 24, 30, 31, 33], "filter_for_dur": 11, "rain_data": 11, "durat": [11, 13, 14, 22, 31], "filter": 11, "hird": [11, 12, 20, 23], "request": [11, 13, 16, 17, 18, 20, 22, 27, 31, 35], "storm": [11, 14], "10m": 11, "20m": 11, "30m": 11, "1h": 11, "2h": 11, "6h": 11, "12h": 11, "24h": 11, "48h": 11, "72h": 11, "96h": 11, "120h": 11, "get_one_site_rainfall_data": 11, "site_id": [11, 12, 20], "rcp": [11, 20], "time_period": [11, 20], "ari": [11, 13, 14], "idf": [11, 12, 20], "requir": [11, 30, 31], "concentr": [11, 20], "pathwai": [11, 20, 34], "2": [11, 14, 34, 36], "6": [11, 20, 34], "4": [11, 34], "5": [11, 13, 14, 20, 34], "8": [11, 34], "histor": [11, 20], "futur": [11, 20], "time": [11, 13, 14, 20, 29, 31, 34, 36], "period": [11, 20, 31, 32], "2031": [11, 20], "2050": [11, 20], "2081": [11, 20], "2100": [11, 20], "averag": [11, 13, 14, 22], "recurr": [11, 13, 14], "interv": [11, 13, 14, 26, 31, 34], "58": [11, 14], "60": [11, 14], "80": [11, 14], "100": [11, 13, 14], "250": [11, 14], "depth": [11, 12, 14, 20], "intens": [11, 12, 14, 20, 22], "argument": 11, "inconsist": 11, "rainfall_data_from_db": 11, "sites_in_catch": [11, 12, 22], "thiessen": [11, 12, 22, 30], "db_rain_table_nam": 12, "relev": 12, "get_sites_id_in_catch": 12, "get_sites_id_not_in_db": 12, "sites_id_in_catch": 12, "add_rainfall_data_to_db": 12, "add_each_site_rainfall_data": 12, "sites_id_list": 12, "add": [12, 14, 24, 28, 31, 34, 36], "rainfall_data_to_db": 12, "obtain": [13, 31], "river": [13, 17, 19, 24, 26, 27, 28, 36], "flow": [13, 26, 27], "scenario": [13, 14, 26, 27, 34], "mean": [13, 22, 26, 31, 32], "annual": 13, "maf": 13, "clean_river_flow_data": 13, "matched_data": 13, "select": [13, 14], "match": [13, 24], "rec1": [13, 17, 24, 25, 28], "osm": [13, 17, 19, 24], "waterwai": [13, 17, 19, 24], "target": [13, 24], "locat": [13, 14, 24, 29, 30, 31, 33, 34], "input": [13, 16, 17, 18, 21, 22, 24, 27, 35, 36], "bg": [13, 16, 17, 18, 21, 22, 24, 27, 33, 35, 36], "extract_valid_ari_valu": 13, "river_flow_data": 13, "get_river_flow_scenario_data": 13, "boundtyp": [13, 26], "middl": [13, 26], "1000": 13, "mandatori": 13, "estim": [13, 20, 26], "lower": [13, 26], "upper": [13, 26], "get_hydrograph_data": 13, "flow_length_min": 13, "time_to_peak_min": [13, 14, 31], "minut": [13, 14, 29, 31, 34], "greatest": [13, 14, 31], "reach": [13, 14, 31], "maximum": [13, 14, 31], "less": [13, 14, 31], "than": [13, 14, 31, 36], "half": [13, 14, 31], "interact": 14, "plot": 14, "get_transposed_data": 14, "rain_depth_in_catch": 14, "transpos": 14, "get_interpolated_data": 14, "transposed_catchment_data": 14, "increment_min": 14, "interp_method": [14, 34], "tempor": [14, 34], "interpol": [14, 34], "method": [14, 21, 22, 34], "scipi": [14, 34], "interp1d": [14, 34], "One": 14, "linear": [14, 34], "nearest": [14, 24, 34], "zero": [14, 34], "slinear": [14, 34], "quadrat": [14, 34], "cubic": [14, 34], "previou": [14, 34], "next": [14, 34], "out": [14, 34], "rang": [14, 31, 34], "get_interp_incremental_data": 14, "interp_catchment_data": 14, "increment": 14, "current": [14, 36], "preced": 14, "cumul": 14, "get_storm_length_increment_data": 14, "interp_increment_data": 14, "storm_length_min": 14, "minimum": [14, 24, 31], "add_time_inform": [14, 31], "site_data": [14, 20], "hyeto_method": 14, "hyetomethod": [14, 21], "second": [14, 22, 29, 31, 34, 36], "hour": [14, 29, 31, 34], "gaug": [14, 22], "ad": [14, 29, 31, 34], "transform_data_for_selected_method": 14, "length": [14, 31], "hyetograph_depth_to_intens": 14, "hyetograph_depth": 14, "get_hyetograph_data": 14, "hyetograph_data_wide_to_long": 14, "hyetograph_data": [14, 22], "wide": 14, "long": [14, 31], "individu": 14, "etc": [16, 17, 18, 31], "remove_existing_rain_input": 16, "bg_flood_dir": [16, 17, 18, 22, 27, 35, 36], "pathlib": [16, 17, 18, 22, 27, 35, 36, 38], "remov": [16, 17, 18, 36], "rain": [16, 21, 22, 36], "directori": [16, 17, 18, 19, 22, 25, 27, 29, 35, 36], "network": [17, 24, 28], "get_catchment_boundary_lin": [17, 33], "line": [17, 20, 33], "remove_existing_river_input": 17, "tide": [18, 29, 31, 32, 33, 34, 35], "sea": [18, 29, 31, 32, 34, 35], "rise": [18, 29, 34, 35], "uniform": [18, 21, 22, 35, 36], "remove_existing_boundary_input": 18, "openstreetmap": [19, 24], "valuabl": [19, 28], "further": [19, 28], "configure_osm_cach": 19, "chang": 19, "cach": 19, "fetch_osm_waterwai": 19, "get_osm_waterways_data": 19, "onli": [19, 31], "linestr": [19, 28], "stream": 19, "get_osm_boundary_points_on_bbox": 19, "osm_waterways_data": 19, "get_osm_waterways_data_on_bbox": 19, "websit": [20, 23], "get_site_url_kei": 20, "get_data_from_hird": 20, "blockstructur": 20, "namedtupl": 20, "layout": 20, "structur": 20, "skip_row": 20, "skip": 20, "start": [20, 31], "There": 20, "four": 20, "abbrevi": 20, "rcp2": 20, "rcp4": 20, "rcp6": 20, "rcp8": 20, "order": 20, "increas": 20, "radi": 20, "forc": 20, "greenhous": 20, "gase": 20, "nan": 20, "two": 20, "categori": 20, "standard": 20, "project": [20, 34], "hist": 20, "hist_stderr": 20, "proj": 20, "get_layout_structure_of_data": 20, "text": [20, 22, 36], "convert_to_tabular_data": 20, "block_structur": 20, "tabular": 20, "": [21, 26, 31, 32, 36], "strenum": [21, 26, 32], "alt_block": 21, "altern": 21, "block": [21, 36], "chicago": 21, "raininputtyp": [21, 22], "spatial": [21, 22, 24], "rain_forc": 22, "txt": 22, "nc": 22, "netcdf": 22, "sites_voronoi_intersect_catch": 22, "overlap": 22, "sites_coverage_in_catch": 22, "calcul": [22, 30, 31], "size": [22, 36], "percentag": 22, "insid": 22, "mean_catchment_rainfal": 22, "sites_coverag": 22, "weight": 22, "measur": [22, 31], "across": 22, "about": [22, 33], "spatial_uniform_rain_input": 22, "write": [22, 36], "rain_intensity_mmhr": 22, "create_rain_data_cub": 22, "xarrai": [22, 24], "dataset": [22, 24, 25, 29], "cube": 22, "raster": 22, "form": 22, "xr": [22, 24], "spatial_varying_rain_input": 22, "generate_rain_model_input": 22, "input_typ": 22, "get_rainfall_sites_data": 23, "get_rainfall_sites_in_df": 23, "rainfall_sites_to_db": 23, "facilit": 24, "find": 24, "closest": [24, 29], "determin": [24, 33], "match_rec1_river_and_osm_waterwai": 24, "rec1_network_data_on_bbox": 24, "osm_waterways_data_on_bbox": 24, "distance_m": 24, "300": 24, "proxim": 24, "distanc": [24, 33], "threshold": 24, "meter": [24, 36], "find_closest_osm_waterwai": 24, "get_elevations_from_hydro_dem": 24, "single_closest_osm_waterwai": 24, "hydro_dem": 24, "hydro_dem_resolut": 24, "elev": [24, 36], "condit": [24, 36], "hydro": [24, 36], "surround": 24, "resolut": [24, 36], "get_target_location_from_hydro_dem": 24, "crucial": 24, "enabl": [24, 36], "precis": 24, "vertic": [24, 34], "discharg": 24, "get_closest_osm_waterways_with_target_loc": 24, "get_matched_data_with_target_loc": 24, "handl": [25, 29, 36], "niwa": [25, 31, 33], "get_rec1_data_from_niwa": 25, "filenotfounderror": [25, 29, 36], "shapefil": 25, "store_rec1_data_to_db": 25, "get_rec1_data_from_db": 25, "confid": [26, 34], "sampl": [26, 40], "generate_river_model_input": 27, "hydrograph_data": 27, "construct": 28, "add_first_last_coords_to_rec1": 28, "rec1_data": 28, "first": [28, 36], "last": 28, "addit": [28, 29, 34], "get_unique_nodes_dict": 28, "rec1_data_w_node_coord": 28, "dictionari": [28, 31], "node": 28, "object": [28, 36], "create_rec1_network_data": 28, "deriv": 28, "build_rec1_network": 28, "rec1_network_data": 28, "networkx": 28, "graph": 28, "build": 28, "nx": 28, "get_rec1_boundary_points_on_bbox": 28, "get_rec1_network_data_on_bbox": 28, "get_slr_data_from_nz_searis": 29, "csv": [29, 31], "store_slr_data_to_db": 29, "get_closest_slr_data": 29, "single_query_loc": 29, "get_slr_data_from_db": 29, "tide_data": [29, 31, 34], "throughout": 30, "get_sites_within_aoi": 30, "thiessen_polygons_calcul": 30, "sites_in_aoi": 30, "thiessen_polygons_to_db": 30, "thiessen_polygons_from_db": 30, "approach": [31, 32], "datum": [31, 32], "tide_api_url_data": 31, "co": 31, "tide_api_url_data_csv": 31, "get_query_loc_coords_posit": 31, "query_loc_row": 31, "posit": [31, 33], "get_date_rang": 31, "start_dat": 31, "date": 31, "todai": 31, "total_dai": 31, "365": 31, "days_per_cal": 31, "31": 31, "dai": 31, "call": 31, "past": 31, "total": 31, "year": [31, 34], "must": 31, "inclus": [31, 34], "per": 31, "gen_api_query_param_list": 31, "lat": [31, 32], "date_rang": 31, "interval_min": 31, "datumtyp": [31, 32], "29": 31, "53": 31, "876": 31, "160": 31, "180": 31, "175": 31, "543": 31, "1440": 31, "omit": 31, "highest": 31, "lowest": [31, 32], "astronom": [31, 32], "msl": [31, 32], "outsid": 31, "async": 31, "fetch_tide_data": 31, "aiohttp": 31, "clientsess": 31, "query_param": 31, "instanc": 31, "fetch_tide_data_for_requested_period": 31, "query_param_list": 31, "iter": 31, "over": 31, "runtimeerror": 31, "convert_to_nz_timezon": 31, "tide_data_utc": 31, "initi": [31, 36], "utc": 31, "timezon": 31, "express": 31, "fetch_tide_data_from_niwa": 31, "get_highest_tide_datetim": 31, "most": 31, "recent": 31, "get_highest_tide_datetime_span": 31, "highest_tide_datetim": 31, "tide_length_min": 31, "end": 31, "event": 31, "center": 31, "around": 31, "get_highest_tide_date_span": 31, "start_datetim": 31, "end_datetim": 31, "fetch_tide_data_around_highest_tid": 31, "get_time_mins_to_add": 31, "approachtyp": [31, 32], "king_tid": [31, 32], "period_tid": [31, 32], "peak": 31, "depend": 31, "get_tide_data": 31, "tide_slr": 32, "king": 32, "sli229": 33, "notidedataexcept": 33, "get_regional_council_clipped_from_db": 33, "region": 33, "council": 33, "clip": 33, "get_nz_coastline_from_db": 33, "distance_km": 33, "coastlin": 33, "kilomet": 33, "buffer": 33, "get_catchment_boundary_info": 33, "segment": 33, "cannot": 33, "get_catchment_boundary_centroid": 33, "centroid": 33, "get_non_intersection_centroid_posit": 33, "non_intersection_area": 33, "rel": 33, "denot": 33, "get_tide_query_loc": 33, "combin": [34, 35], "slr": 34, "account": 34, "ssp": 34, "land": 34, "motion": 34, "vlm": 34, "percentil": 34, "split_slr_measurementname_column": 34, "slr_data": 34, "split": 34, "measurementnam": 34, "confidence_level": 34, "ssp_scenario": 34, "add_vlm": 34, "get_slr_scenario_data": 34, "desir": 34, "low": 34, "medium": 34, "share": 34, "socioeconom": 34, "ssp1": 34, "ssp2": 34, "ssp5": 34, "9": 34, "ssp3": 34, "7": 34, "17": 34, "83": 34, "get_interpolated_slr_scenario_data": 34, "slr_scenario_data": 34, "increment_year": 34, "add_slr_to_tid": 34, "slr_interp_scenario": 34, "proj_year": 34, "get_combined_tide_slr_data": 34, "consid": 34, "water": 35, "generate_uniform_boundary_input": 35, "tide_slr_data": 35, "result": [36, 41], "metadata": 36, "incorpor": 36, "geoserv": [36, 38], "visual": 36, "get_valid_bg_flood_dir": 36, "get_new_model_output_path": 36, "filenam": 36, "get_model_output_metadata": 36, "model_output_path": [36, 38], "relat": 36, "three": 36, "element": 36, "absolut": 36, "known": 36, "wkt": [36, 41], "store_model_output_metadata_to_db": 36, "latest_model_output_from_db": 36, "latest": 36, "add_crs_to_latest_model_output": 36, "process_rain_input_fil": 36, "param_fil": 36, "textio": 36, "written": 36, "process_boundary_input_fil": 36, "process_river_input_fil": 36, "renam": 36, "prepare_bg_flood_model_input": 36, "hydro_dem_path": 36, "output_timestep": 36, "end_tim": 36, "mask": 36, "9999": 36, "gpu_devic": 36, "small_nc": 36, "prepar": 36, "grid": 36, "metric": 36, "cell": 36, "step": 36, "stop": 36, "comput": 36, "topographi": 36, "zb": 36, "greater": 36, "gpu": 36, "devic": 36, "cpu": 36, "abov": 36, "short": 36, "integ": 36, "reduc": 36, "convers": 36, "run_bg_flood_model": 36, "geoserver_rest_url": 38, "localhost": 38, "8088": 38, "rest": 38, "convert_nc_to_gtiff": 38, "nc_file_path": 38, "upload_gtiff_to_stor": 38, "geoserver_url": 38, "gtiff_filepath": 38, "store_nam": 38, "workspace_nam": 38, "create_layer_from_stor": 38, "layer_nam": 38, "native_cr": 38, "add_gtiff_to_geoserv": 38, "add_model_output_to_geoserv": 38, "__version__": [39, 42], "digit": 40, "twin": 40, "modules_with_log_level": 40, "moduletyp": 40, "module_to_log_level": 40, "message_broker_url": 41, "onfailurestatetask": 41, "switch": 41, "state": 41, "failur": 41, "on_failur": 41, "_exc": 41, "_task_id": 41, "_arg": 41, "_kwarg": 41, "_einfo": 41, "create_model_for_area": 41, "selected_polygon_wkt": 41, "celeri": 41, "groupresult": 41, "chain": 41, "sequenti": 41, "group": 41, "parallel": 41, "sub": 41, "initialise_db_with_region_geometri": 41, "generate_rainfall_input": 41, "run_flood_model": 41, "wkt_to_gdf": 41, "subpackag": 42, "submodul": 42, "packag": 42, "index": 42, "modul": 42, "search": 42}, "objects": {"": [[39, 0, 0, "-", "src"]], "src": [[39, 1, 1, "", "__version__"], [1, 0, 0, "-", "app"], [2, 0, 0, "-", "config"], [5, 0, 0, "-", "digitaltwin"], [15, 0, 0, "-", "dynamic_boundary_conditions"], [37, 0, 0, "-", "flood_model"], [40, 0, 0, "-", "run_all"], [41, 0, 0, "-", "tasks"]], "src.app": [[1, 1, 1, "", "app"], [1, 2, 1, "", "create_wkt_from_coords"], [1, 2, 1, "", "generate_model"], [1, 2, 1, "", "get_depth_at_point"], [1, 2, 1, "", "get_status"], [1, 2, 1, "", "get_wfs_layer_latest_model"], [1, 1, 1, "", "gunicorn_logger"], [1, 2, 1, "", "health_check"], [1, 2, 1, "", "remove_task"], [1, 2, 1, "", "valid_coordinates"]], "src.config": [[2, 1, 1, "", "T"], [2, 2, 1, "", "_cast_str"], [2, 2, 1, "", "get_env_variable"]], "src.digitaltwin": [[3, 0, 0, "-", "data_to_db"], [4, 0, 0, "-", "get_data_using_geoapis"], [6, 0, 0, "-", "instructions_records_to_db"], [7, 0, 0, "-", "run"], [8, 0, 0, "-", "setup_environment"], [9, 0, 0, "-", "tables"], [10, 0, 0, "-", "utils"]], "src.digitaltwin.data_to_db": [[3, 3, 1, "", "NoNonIntersectionError"], [3, 2, 1, "", "get_geospatial_layer_info"], [3, 2, 1, "", "get_non_intersection_area_from_db"], [3, 2, 1, "", "get_non_nz_geospatial_layers"], [3, 2, 1, "", "get_nz_geospatial_layers"], [3, 2, 1, "", "get_vector_data_id_not_in_db"], [3, 1, 1, "", "log"], [3, 2, 1, "", "non_nz_geospatial_layers_data_to_db"], [3, 2, 1, "", "nz_geospatial_layers_data_to_db"], [3, 2, 1, "", "process_existing_non_nz_geospatial_layers"], [3, 2, 1, "", "process_new_non_nz_geospatial_layers"], [3, 2, 1, "", "store_geospatial_layers_data_to_db"], [3, 2, 1, "", "user_log_info_to_db"]], "src.digitaltwin.get_data_using_geoapis": [[4, 4, 1, "", "MFE"], [4, 2, 1, "", "clean_fetched_vector_data"], [4, 2, 1, "", "fetch_vector_data_using_geoapis"]], "src.digitaltwin.get_data_using_geoapis.MFE": [[4, 5, 1, "", "GEOMETRY_NAMES"], [4, 5, 1, "", "NETLOC_API"]], "src.digitaltwin.instructions_records_to_db": [[6, 2, 1, "", "get_existing_geospatial_layers"], [6, 2, 1, "", "get_non_existing_records"], [6, 1, 1, "", "log"], [6, 2, 1, "", "read_and_check_instructions_file"], [6, 2, 1, "", "store_instructions_records_to_db"], [6, 2, 1, "", "validate_instruction_fields"], [6, 2, 1, "", "validate_url_reachability"]], "src.digitaltwin.run": [[7, 2, 1, "", "main"], [7, 1, 1, "", "sample_polygon"]], "src.digitaltwin.setup_environment": [[8, 1, 1, "", "Base"], [8, 2, 1, "", "get_connection_from_profile"], [8, 2, 1, "", "get_database"], [8, 2, 1, "", "get_engine"], [8, 1, 1, "", "log"]], "src.digitaltwin.tables": [[9, 4, 1, "", "BGFloodModelOutput"], [9, 1, 1, "", "Base"], [9, 4, 1, "", "GeospatialLayers"], [9, 4, 1, "", "HydroDEM"], [9, 4, 1, "", "UserLogInfo"], [9, 2, 1, "", "check_table_exists"], [9, 2, 1, "", "create_table"], [9, 2, 1, "", "execute_query"]], "src.digitaltwin.tables.BGFloodModelOutput": [[9, 5, 1, "id19", "__tablename__"], [9, 5, 1, "id23", "created_at"], [9, 5, 1, "id21", "file_name"], [9, 5, 1, "id22", "file_path"], [9, 5, 1, "id24", "geometry"], [9, 5, 1, "id20", "unique_id"]], "src.digitaltwin.tables.GeospatialLayers": [[9, 5, 1, "id0", "__tablename__"], [9, 5, 1, "id6", "coverage_area"], [9, 5, 1, "id2", "data_provider"], [9, 5, 1, "id3", "layer_id"], [9, 5, 1, "id4", "table_name"], [9, 5, 1, "id5", "unique_column_name"], [9, 5, 1, "id1", "unique_id"], [9, 5, 1, "id7", "url"]], "src.digitaltwin.tables.HydroDEM": [[9, 5, 1, "id13", "__tablename__"], [9, 5, 1, "id17", "created_at"], [9, 5, 1, "id15", "file_name"], [9, 5, 1, "id16", "file_path"], [9, 5, 1, "id18", "geometry"], [9, 5, 1, "id14", "unique_id"]], "src.digitaltwin.tables.UserLogInfo": [[9, 5, 1, "id8", "__tablename__"], [9, 5, 1, "id11", "created_at"], [9, 5, 1, "id12", "geometry"], [9, 5, 1, "id10", "source_table_list"], [9, 5, 1, "id9", "unique_id"]], "src.digitaltwin.utils": [[10, 4, 1, "", "LogLevel"], [10, 2, 1, "", "get_catchment_area"], [10, 2, 1, "", "get_nz_boundary"], [10, 1, 1, "", "log"], [10, 2, 1, "", "log_execution_info"], [10, 2, 1, "", "setup_logging"]], "src.digitaltwin.utils.LogLevel": [[10, 5, 1, "id0", "CRITICAL"], [10, 5, 1, "id4", "DEBUG"], [10, 5, 1, "id1", "ERROR"], [10, 5, 1, "id3", "INFO"], [10, 5, 1, "id5", "NOTSET"], [10, 5, 1, "id2", "WARNING"]], "src.dynamic_boundary_conditions": [[11, 0, 0, "-", "hirds_rainfall_data_from_db"], [12, 0, 0, "-", "hirds_rainfall_data_to_db"], [13, 0, 0, "-", "hydrograph"], [14, 0, 0, "-", "hyetograph"], [16, 0, 0, "-", "main_rainfall"], [17, 0, 0, "-", "main_river"], [18, 0, 0, "-", "main_tide_slr"], [19, 0, 0, "-", "osm_waterways"], [20, 0, 0, "-", "rainfall_data_from_hirds"], [21, 0, 0, "-", "rainfall_enum"], [22, 0, 0, "-", "rainfall_model_input"], [23, 0, 0, "-", "rainfall_sites"], [24, 0, 0, "-", "rec1_osm_match"], [25, 0, 0, "-", "river_data_to_from_db"], [26, 0, 0, "-", "river_enum"], [27, 0, 0, "-", "river_model_input"], [28, 0, 0, "-", "river_network_for_aoi"], [29, 0, 0, "-", "sea_level_rise_data"], [30, 0, 0, "-", "thiessen_polygons"], [31, 0, 0, "-", "tide_data_from_niwa"], [32, 0, 0, "-", "tide_enum"], [33, 0, 0, "-", "tide_query_location"], [34, 0, 0, "-", "tide_slr_combine"], [35, 0, 0, "-", "tide_slr_model_input"]], "src.dynamic_boundary_conditions.hirds_rainfall_data_from_db": [[11, 2, 1, "", "filter_for_duration"], [11, 2, 1, "", "get_one_site_rainfall_data"], [11, 2, 1, "", "rainfall_data_from_db"]], "src.dynamic_boundary_conditions.hirds_rainfall_data_to_db": [[12, 2, 1, "", "add_each_site_rainfall_data"], [12, 2, 1, "", "add_rainfall_data_to_db"], [12, 2, 1, "", "db_rain_table_name"], [12, 2, 1, "", "get_sites_id_in_catchment"], [12, 2, 1, "", "get_sites_id_not_in_db"], [12, 1, 1, "", "log"], [12, 2, 1, "", "rainfall_data_to_db"]], "src.dynamic_boundary_conditions.hydrograph": [[13, 2, 1, "", "clean_river_flow_data"], [13, 2, 1, "", "extract_valid_ari_values"], [13, 2, 1, "", "get_hydrograph_data"], [13, 2, 1, "", "get_river_flow_scenario_data"]], "src.dynamic_boundary_conditions.hyetograph": [[14, 2, 1, "", "add_time_information"], [14, 2, 1, "", "get_hyetograph_data"], [14, 2, 1, "", "get_interp_incremental_data"], [14, 2, 1, "", "get_interpolated_data"], [14, 2, 1, "", "get_storm_length_increment_data"], [14, 2, 1, "", "get_transposed_data"], [14, 2, 1, "", "hyetograph"], [14, 2, 1, "", "hyetograph_data_wide_to_long"], [14, 2, 1, "", "hyetograph_depth_to_intensity"], [14, 2, 1, "", "transform_data_for_selected_method"]], "src.dynamic_boundary_conditions.main_rainfall": [[16, 2, 1, "", "main"], [16, 2, 1, "", "remove_existing_rain_inputs"], [16, 1, 1, "", "sample_polygon"]], "src.dynamic_boundary_conditions.main_river": [[17, 2, 1, "", "get_catchment_boundary_lines"], [17, 2, 1, "", "main"], [17, 2, 1, "", "remove_existing_river_inputs"], [17, 1, 1, "", "sample_polygon"]], "src.dynamic_boundary_conditions.main_tide_slr": [[18, 1, 1, "", "log"], [18, 2, 1, "", "main"], [18, 2, 1, "", "remove_existing_boundary_inputs"], [18, 1, 1, "", "sample_polygon"]], "src.dynamic_boundary_conditions.osm_waterways": [[19, 2, 1, "", "configure_osm_cache"], [19, 2, 1, "", "fetch_osm_waterways"], [19, 2, 1, "", "get_osm_boundary_points_on_bbox"], [19, 2, 1, "", "get_osm_waterways_data"], [19, 2, 1, "", "get_osm_waterways_data_on_bbox"]], "src.dynamic_boundary_conditions.rainfall_data_from_hirds": [[20, 4, 1, "", "BlockStructure"], [20, 2, 1, "", "convert_to_tabular_data"], [20, 2, 1, "", "get_data_from_hirds"], [20, 2, 1, "", "get_layout_structure_of_data"], [20, 2, 1, "", "get_site_url_key"]], "src.dynamic_boundary_conditions.rainfall_data_from_hirds.BlockStructure": [[20, 5, 1, "id3", "category"], [20, 5, 1, "id1", "rcp"], [20, 5, 1, "id0", "skip_rows"], [20, 5, 1, "id2", "time_period"]], "src.dynamic_boundary_conditions.rainfall_enum": [[21, 4, 1, "", "HyetoMethod"], [21, 4, 1, "", "RainInputType"]], "src.dynamic_boundary_conditions.rainfall_enum.HyetoMethod": [[21, 5, 1, "id0", "ALT_BLOCK"], [21, 5, 1, "id1", "CHICAGO"]], "src.dynamic_boundary_conditions.rainfall_enum.RainInputType": [[21, 5, 1, "id2", "UNIFORM"], [21, 5, 1, "id3", "VARYING"]], "src.dynamic_boundary_conditions.rainfall_model_input": [[22, 2, 1, "", "create_rain_data_cube"], [22, 2, 1, "", "generate_rain_model_input"], [22, 1, 1, "", "log"], [22, 2, 1, "", "mean_catchment_rainfall"], [22, 2, 1, "", "sites_coverage_in_catchment"], [22, 2, 1, "", "sites_voronoi_intersect_catchment"], [22, 2, 1, "", "spatial_uniform_rain_input"], [22, 2, 1, "", "spatial_varying_rain_input"]], "src.dynamic_boundary_conditions.rainfall_sites": [[23, 2, 1, "", "get_rainfall_sites_data"], [23, 2, 1, "", "get_rainfall_sites_in_df"], [23, 1, 1, "", "log"], [23, 2, 1, "", "rainfall_sites_to_db"]], "src.dynamic_boundary_conditions.rec1_osm_match": [[24, 2, 1, "", "find_closest_osm_waterways"], [24, 2, 1, "", "get_closest_osm_waterways_with_target_locations"], [24, 2, 1, "", "get_elevations_from_hydro_dem"], [24, 2, 1, "", "get_matched_data_with_target_locations"], [24, 2, 1, "", "get_target_location_from_hydro_dem"], [24, 2, 1, "", "match_rec1_river_and_osm_waterway"]], "src.dynamic_boundary_conditions.river_data_to_from_db": [[25, 2, 1, "", "get_rec1_data_from_db"], [25, 2, 1, "", "get_rec1_data_from_niwa"], [25, 1, 1, "", "log"], [25, 2, 1, "", "store_rec1_data_to_db"]], "src.dynamic_boundary_conditions.river_enum": [[26, 4, 1, "", "BoundType"]], "src.dynamic_boundary_conditions.river_enum.BoundType": [[26, 5, 1, "id0", "LOWER"], [26, 5, 1, "id1", "MIDDLE"], [26, 5, 1, "id2", "UPPER"]], "src.dynamic_boundary_conditions.river_model_input": [[27, 2, 1, "", "generate_river_model_input"], [27, 1, 1, "", "log"]], "src.dynamic_boundary_conditions.river_network_for_aoi": [[28, 2, 1, "", "add_first_last_coords_to_rec1"], [28, 2, 1, "", "build_rec1_network"], [28, 2, 1, "", "create_rec1_network_data"], [28, 2, 1, "", "get_rec1_boundary_points_on_bbox"], [28, 2, 1, "", "get_rec1_network_data_on_bbox"], [28, 2, 1, "", "get_unique_nodes_dict"]], "src.dynamic_boundary_conditions.sea_level_rise_data": [[29, 2, 1, "", "get_closest_slr_data"], [29, 2, 1, "", "get_slr_data_from_db"], [29, 2, 1, "", "get_slr_data_from_nz_searise"], [29, 1, 1, "", "log"], [29, 2, 1, "", "store_slr_data_to_db"]], "src.dynamic_boundary_conditions.thiessen_polygons": [[30, 2, 1, "", "get_sites_within_aoi"], [30, 1, 1, "", "log"], [30, 2, 1, "", "thiessen_polygons_calculator"], [30, 2, 1, "", "thiessen_polygons_from_db"], [30, 2, 1, "", "thiessen_polygons_to_db"]], "src.dynamic_boundary_conditions.tide_data_from_niwa": [[31, 1, 1, "", "TIDE_API_URL_DATA"], [31, 1, 1, "", "TIDE_API_URL_DATA_CSV"], [31, 2, 1, "", "add_time_information"], [31, 2, 1, "", "convert_to_nz_timezone"], [31, 2, 1, "", "fetch_tide_data"], [31, 2, 1, "", "fetch_tide_data_around_highest_tide"], [31, 2, 1, "", "fetch_tide_data_for_requested_period"], [31, 2, 1, "", "fetch_tide_data_from_niwa"], [31, 2, 1, "", "gen_api_query_param_list"], [31, 2, 1, "", "get_date_ranges"], [31, 2, 1, "", "get_highest_tide_date_span"], [31, 2, 1, "", "get_highest_tide_datetime"], [31, 2, 1, "", "get_highest_tide_datetime_span"], [31, 2, 1, "", "get_query_loc_coords_position"], [31, 2, 1, "", "get_tide_data"], [31, 2, 1, "", "get_time_mins_to_add"]], "src.dynamic_boundary_conditions.tide_enum": [[32, 4, 1, "", "ApproachType"], [32, 4, 1, "", "DatumType"]], "src.dynamic_boundary_conditions.tide_enum.ApproachType": [[32, 5, 1, "id2", "KING_TIDE"], [32, 5, 1, "id3", "PERIOD_TIDE"]], "src.dynamic_boundary_conditions.tide_enum.DatumType": [[32, 5, 1, "id0", "LAT"], [32, 5, 1, "id1", "MSL"]], "src.dynamic_boundary_conditions.tide_query_location": [[33, 3, 1, "", "NoTideDataException"], [33, 2, 1, "", "get_catchment_boundary_centroids"], [33, 2, 1, "", "get_catchment_boundary_info"], [33, 2, 1, "", "get_catchment_boundary_lines"], [33, 2, 1, "", "get_non_intersection_centroid_position"], [33, 2, 1, "", "get_nz_coastline_from_db"], [33, 2, 1, "", "get_regional_council_clipped_from_db"], [33, 2, 1, "", "get_tide_query_locations"]], "src.dynamic_boundary_conditions.tide_slr_combine": [[34, 2, 1, "", "add_slr_to_tide"], [34, 2, 1, "", "get_combined_tide_slr_data"], [34, 2, 1, "", "get_interpolated_slr_scenario_data"], [34, 2, 1, "", "get_slr_scenario_data"], [34, 2, 1, "", "split_slr_measurementname_column"]], "src.dynamic_boundary_conditions.tide_slr_model_input": [[35, 2, 1, "", "generate_uniform_boundary_input"], [35, 1, 1, "", "log"]], "src.flood_model": [[36, 0, 0, "-", "bg_flood_model"], [38, 0, 0, "-", "serve_model"]], "src.flood_model.bg_flood_model": [[36, 1, 1, "", "Base"], [36, 2, 1, "", "add_crs_to_latest_model_output"], [36, 2, 1, "", "get_model_output_metadata"], [36, 2, 1, "", "get_new_model_output_path"], [36, 2, 1, "", "get_valid_bg_flood_dir"], [36, 2, 1, "", "latest_model_output_from_db"], [36, 1, 1, "", "log"], [36, 2, 1, "", "main"], [36, 2, 1, "", "prepare_bg_flood_model_inputs"], [36, 2, 1, "", "process_boundary_input_files"], [36, 2, 1, "", "process_rain_input_files"], [36, 2, 1, "", "process_river_input_files"], [36, 2, 1, "", "run_bg_flood_model"], [36, 1, 1, "", "sample_polygon"], [36, 2, 1, "", "store_model_output_metadata_to_db"]], "src.flood_model.serve_model": [[38, 1, 1, "", "GEOSERVER_REST_URL"], [38, 2, 1, "", "add_gtiff_to_geoserver"], [38, 2, 1, "", "add_model_output_to_geoserver"], [38, 2, 1, "", "convert_nc_to_gtiff"], [38, 2, 1, "", "create_layer_from_store"], [38, 2, 1, "", "upload_gtiff_to_store"]], "src.run_all": [[40, 2, 1, "", "main"], [40, 1, 1, "", "module_to_log_level"]], "src.tasks": [[41, 4, 1, "", "OnFailureStateTask"], [41, 1, 1, "", "app"], [41, 2, 1, "", "create_model_for_area"], [41, 2, 1, "", "generate_rainfall_inputs"], [41, 2, 1, "", "initialise_db_with_region_geometries"], [41, 1, 1, "", "message_broker_url"], [41, 2, 1, "", "run_flood_model"], [41, 2, 1, "", "wkt_to_gdf"]], "src.tasks.OnFailureStateTask": [[41, 6, 1, "", "on_failure"]]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:function", "3": "py:exception", "4": "py:class", "5": "py:attribute", "6": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "function", "Python function"], "3": ["py", "exception", "Python exception"], "4": ["py", "class", "Python class"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "method", "Python method"]}, "titleterms": {"api": 0, "refer": 0, "src": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "app": 1, "modul": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41], "content": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42], "function": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 41], "attribut": [1, 2, 3, 6, 7, 8, 9, 10, 12, 16, 17, 18, 22, 23, 25, 27, 29, 30, 31, 35, 36, 38, 40, 41], "config": 2, "digitaltwin": [3, 4, 5, 6, 7, 8, 9, 10], "data_to_db": 3, "get_data_using_geoapi": 4, "class": [4, 9, 10, 20, 21, 26, 32, 41], "submodul": [5, 15, 37, 39], "instructions_records_to_db": 6, "run": 7, "setup_environ": 8, "tabl": [9, 42], "util": 10, "dynamic_boundary_condit": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "hirds_rainfall_data_from_db": 11, "hirds_rainfall_data_to_db": 12, "hydrograph": 13, "hyetograph": 14, "main_rainfal": 16, "main_riv": 17, "main_tide_slr": 18, "osm_waterwai": 19, "rainfall_data_from_hird": 20, "rainfall_enum": 21, "rainfall_model_input": 22, "rainfall_sit": 23, "rec1_osm_match": 24, "river_data_to_from_db": 25, "river_enum": 26, "river_model_input": 27, "river_network_for_aoi": 28, "sea_level_rise_data": 29, "thiessen_polygon": 30, "tide_data_from_niwa": 31, "tide_enum": 32, "tide_query_loc": 33, "tide_slr_combin": 34, "tide_slr_model_input": 35, "flood_model": [36, 37, 38], "bg_flood_model": 36, "serve_model": 38, "subpackag": 39, "packag": 39, "run_al": 40, "task": 41, "welcom": 42, "digit": 42, "twin": 42, "flood": 42, "resili": 42, "aotearoa": 42, "new": 42, "zealand": 42, "": 42, "document": 42, "indic": 42}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"API Reference": [[0, "api-reference"]], "src.app": [[1, "module-src.app"]], "Module Contents": [[1, "module-contents"], [2, "module-contents"], [3, "module-contents"], [4, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"], [9, "module-contents"], [10, "module-contents"], [11, "module-contents"], [12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [20, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [24, "module-contents"], [25, "module-contents"], [26, "module-contents"], [27, "module-contents"], [28, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [34, "module-contents"], [35, "module-contents"], [36, "module-contents"], [38, "module-contents"], [40, "module-contents"], [41, "module-contents"]], "Functions": [[1, "functions"], [2, "functions"], [3, "functions"], [4, "functions"], [6, "functions"], [7, "functions"], [8, "functions"], [9, "functions"], [10, "functions"], [11, "functions"], [12, "functions"], [13, "functions"], [14, "functions"], [16, "functions"], [17, "functions"], [18, "functions"], [19, "functions"], [20, "functions"], [22, "functions"], [23, "functions"], [24, "functions"], [25, "functions"], [27, "functions"], [28, "functions"], [29, "functions"], [30, "functions"], [31, "functions"], [33, "functions"], [34, "functions"], [35, "functions"], [36, "functions"], [38, "functions"], [40, "functions"], [41, "functions"]], "Attributes": [[1, "attributes"], [2, "attributes"], [3, "attributes"], [6, "attributes"], [7, "attributes"], [8, "attributes"], [9, "attributes"], [10, "attributes"], [12, "attributes"], [16, "attributes"], [17, "attributes"], [18, "attributes"], [22, "attributes"], [23, "attributes"], [25, "attributes"], [27, "attributes"], [29, "attributes"], [30, "attributes"], [31, "attributes"], [35, "attributes"], [36, "attributes"], [38, "attributes"], [40, "attributes"], [41, "attributes"]], "src.config": [[2, "module-src.config"]], "src.digitaltwin.data_to_db": [[3, "module-src.digitaltwin.data_to_db"]], "src.digitaltwin.get_data_using_geoapis": [[4, "module-src.digitaltwin.get_data_using_geoapis"]], "Classes": [[4, "classes"], [9, "classes"], [10, "classes"], [20, "classes"], [21, "classes"], [26, "classes"], [32, "classes"], [41, "classes"]], "src.digitaltwin": [[5, "module-src.digitaltwin"]], "Submodules": [[5, "submodules"], [15, "submodules"], [37, "submodules"], [39, "submodules"]], "src.digitaltwin.instructions_records_to_db": [[6, "module-src.digitaltwin.instructions_records_to_db"]], "src.digitaltwin.run": [[7, "module-src.digitaltwin.run"]], "src.digitaltwin.setup_environment": [[8, "module-src.digitaltwin.setup_environment"]], "src.digitaltwin.tables": [[9, "module-src.digitaltwin.tables"]], "src.digitaltwin.utils": [[10, "module-src.digitaltwin.utils"]], "src.dynamic_boundary_conditions.hirds_rainfall_data_from_db": [[11, "module-src.dynamic_boundary_conditions.hirds_rainfall_data_from_db"]], "src.dynamic_boundary_conditions.hirds_rainfall_data_to_db": [[12, "module-src.dynamic_boundary_conditions.hirds_rainfall_data_to_db"]], "src.dynamic_boundary_conditions.hydrograph": [[13, "module-src.dynamic_boundary_conditions.hydrograph"]], "src.dynamic_boundary_conditions.hyetograph": [[14, "module-src.dynamic_boundary_conditions.hyetograph"]], "src.dynamic_boundary_conditions": [[15, "module-src.dynamic_boundary_conditions"]], "src.dynamic_boundary_conditions.main_rainfall": [[16, "module-src.dynamic_boundary_conditions.main_rainfall"]], "src.dynamic_boundary_conditions.main_river": [[17, "module-src.dynamic_boundary_conditions.main_river"]], "src.dynamic_boundary_conditions.main_tide_slr": [[18, "module-src.dynamic_boundary_conditions.main_tide_slr"]], "src.dynamic_boundary_conditions.osm_waterways": [[19, "module-src.dynamic_boundary_conditions.osm_waterways"]], "src.dynamic_boundary_conditions.rainfall_data_from_hirds": [[20, "module-src.dynamic_boundary_conditions.rainfall_data_from_hirds"]], "src.dynamic_boundary_conditions.rainfall_enum": [[21, "module-src.dynamic_boundary_conditions.rainfall_enum"]], "src.dynamic_boundary_conditions.rainfall_model_input": [[22, "module-src.dynamic_boundary_conditions.rainfall_model_input"]], "src.dynamic_boundary_conditions.rainfall_sites": [[23, "module-src.dynamic_boundary_conditions.rainfall_sites"]], "src.dynamic_boundary_conditions.rec1_osm_match": [[24, "module-src.dynamic_boundary_conditions.rec1_osm_match"]], "src.dynamic_boundary_conditions.river_data_to_from_db": [[25, "module-src.dynamic_boundary_conditions.river_data_to_from_db"]], "src.dynamic_boundary_conditions.river_enum": [[26, "module-src.dynamic_boundary_conditions.river_enum"]], "src.dynamic_boundary_conditions.river_model_input": [[27, "module-src.dynamic_boundary_conditions.river_model_input"]], "src.dynamic_boundary_conditions.river_network_for_aoi": [[28, "module-src.dynamic_boundary_conditions.river_network_for_aoi"]], "src.dynamic_boundary_conditions.sea_level_rise_data": [[29, "module-src.dynamic_boundary_conditions.sea_level_rise_data"]], "src.dynamic_boundary_conditions.thiessen_polygons": [[30, "module-src.dynamic_boundary_conditions.thiessen_polygons"]], "src.dynamic_boundary_conditions.tide_data_from_niwa": [[31, "module-src.dynamic_boundary_conditions.tide_data_from_niwa"]], "src.dynamic_boundary_conditions.tide_enum": [[32, "module-src.dynamic_boundary_conditions.tide_enum"]], "src.dynamic_boundary_conditions.tide_query_location": [[33, "module-src.dynamic_boundary_conditions.tide_query_location"]], "src.dynamic_boundary_conditions.tide_slr_combine": [[34, "module-src.dynamic_boundary_conditions.tide_slr_combine"]], "src.dynamic_boundary_conditions.tide_slr_model_input": [[35, "module-src.dynamic_boundary_conditions.tide_slr_model_input"]], "src.flood_model.bg_flood_model": [[36, "module-src.flood_model.bg_flood_model"]], "src.flood_model": [[37, "module-src.flood_model"]], "src.flood_model.serve_model": [[38, "module-src.flood_model.serve_model"]], "src": [[39, "module-src"]], "Subpackages": [[39, "subpackages"]], "Package Contents": [[39, "package-contents"]], "src.run_all": [[40, "module-src.run_all"]], "src.tasks": [[41, "module-src.tasks"]], "Welcome to Digital Twin for Flood Resilience in Aotearoa New Zealand\u2019s documentation!": [[42, "welcome-to-digital-twin-for-flood-resilience-in-aotearoa-new-zealand-s-documentation"]], "Contents:": [[42, null]], "Indices and tables": [[42, "indices-and-tables"]]}, "indexentries": {"app (in module src.app)": [[1, "src.app.app"]], "create_wkt_from_coords() (in module src.app)": [[1, "src.app.create_wkt_from_coords"]], "generate_model() (in module src.app)": [[1, "src.app.generate_model"]], "get_depth_at_point() (in module src.app)": [[1, "src.app.get_depth_at_point"]], "get_status() (in module src.app)": [[1, "src.app.get_status"]], "get_wfs_layer_latest_model() (in module src.app)": [[1, "src.app.get_wfs_layer_latest_model"]], "gunicorn_logger (in module src.app)": [[1, "src.app.gunicorn_logger"]], "health_check() (in module src.app)": [[1, "src.app.health_check"]], "module": [[1, "module-src.app"], [2, "module-src.config"], [3, "module-src.digitaltwin.data_to_db"], [4, "module-src.digitaltwin.get_data_using_geoapis"], [5, "module-src.digitaltwin"], [6, "module-src.digitaltwin.instructions_records_to_db"], [7, "module-src.digitaltwin.run"], [8, "module-src.digitaltwin.setup_environment"], [9, "module-src.digitaltwin.tables"], [10, "module-src.digitaltwin.utils"], [11, "module-src.dynamic_boundary_conditions.hirds_rainfall_data_from_db"], [12, "module-src.dynamic_boundary_conditions.hirds_rainfall_data_to_db"], [13, "module-src.dynamic_boundary_conditions.hydrograph"], [14, "module-src.dynamic_boundary_conditions.hyetograph"], [15, "module-src.dynamic_boundary_conditions"], [16, "module-src.dynamic_boundary_conditions.main_rainfall"], [17, "module-src.dynamic_boundary_conditions.main_river"], [18, "module-src.dynamic_boundary_conditions.main_tide_slr"], [19, "module-src.dynamic_boundary_conditions.osm_waterways"], [20, "module-src.dynamic_boundary_conditions.rainfall_data_from_hirds"], [21, "module-src.dynamic_boundary_conditions.rainfall_enum"], [22, "module-src.dynamic_boundary_conditions.rainfall_model_input"], [23, "module-src.dynamic_boundary_conditions.rainfall_sites"], [24, "module-src.dynamic_boundary_conditions.rec1_osm_match"], [25, "module-src.dynamic_boundary_conditions.river_data_to_from_db"], [26, "module-src.dynamic_boundary_conditions.river_enum"], [27, "module-src.dynamic_boundary_conditions.river_model_input"], [28, "module-src.dynamic_boundary_conditions.river_network_for_aoi"], [29, "module-src.dynamic_boundary_conditions.sea_level_rise_data"], [30, "module-src.dynamic_boundary_conditions.thiessen_polygons"], [31, "module-src.dynamic_boundary_conditions.tide_data_from_niwa"], [32, "module-src.dynamic_boundary_conditions.tide_enum"], [33, "module-src.dynamic_boundary_conditions.tide_query_location"], [34, "module-src.dynamic_boundary_conditions.tide_slr_combine"], [35, "module-src.dynamic_boundary_conditions.tide_slr_model_input"], [36, "module-src.flood_model.bg_flood_model"], [37, "module-src.flood_model"], [38, "module-src.flood_model.serve_model"], [39, "module-src"], [40, "module-src.run_all"], [41, "module-src.tasks"]], "remove_task() (in module src.app)": [[1, "src.app.remove_task"]], "src.app": [[1, "module-src.app"]], "valid_coordinates() (in module src.app)": [[1, "src.app.valid_coordinates"]], "t (in module src.config)": [[2, "src.config.T"]], "_cast_str() (in module src.config)": [[2, "src.config._cast_str"]], "get_env_variable() (in module src.config)": [[2, "src.config.get_env_variable"]], "src.config": [[2, "module-src.config"]], "nononintersectionerror": [[3, "src.digitaltwin.data_to_db.NoNonIntersectionError"]], "get_geospatial_layer_info() (in module src.digitaltwin.data_to_db)": [[3, "src.digitaltwin.data_to_db.get_geospatial_layer_info"]], "get_non_intersection_area_from_db() (in module src.digitaltwin.data_to_db)": [[3, "src.digitaltwin.data_to_db.get_non_intersection_area_from_db"]], "get_non_nz_geospatial_layers() (in module src.digitaltwin.data_to_db)": [[3, "src.digitaltwin.data_to_db.get_non_nz_geospatial_layers"]], "get_nz_geospatial_layers() (in module src.digitaltwin.data_to_db)": [[3, "src.digitaltwin.data_to_db.get_nz_geospatial_layers"]], "get_vector_data_id_not_in_db() (in module src.digitaltwin.data_to_db)": [[3, "src.digitaltwin.data_to_db.get_vector_data_id_not_in_db"]], "log (in module src.digitaltwin.data_to_db)": [[3, "src.digitaltwin.data_to_db.log"]], "non_nz_geospatial_layers_data_to_db() (in module src.digitaltwin.data_to_db)": [[3, "src.digitaltwin.data_to_db.non_nz_geospatial_layers_data_to_db"]], "nz_geospatial_layers_data_to_db() (in module src.digitaltwin.data_to_db)": [[3, "src.digitaltwin.data_to_db.nz_geospatial_layers_data_to_db"]], "process_existing_non_nz_geospatial_layers() (in module src.digitaltwin.data_to_db)": [[3, "src.digitaltwin.data_to_db.process_existing_non_nz_geospatial_layers"]], "process_new_non_nz_geospatial_layers() (in module src.digitaltwin.data_to_db)": [[3, "src.digitaltwin.data_to_db.process_new_non_nz_geospatial_layers"]], "src.digitaltwin.data_to_db": [[3, "module-src.digitaltwin.data_to_db"]], "store_geospatial_layers_data_to_db() (in module src.digitaltwin.data_to_db)": [[3, "src.digitaltwin.data_to_db.store_geospatial_layers_data_to_db"]], "user_log_info_to_db() (in module src.digitaltwin.data_to_db)": [[3, "src.digitaltwin.data_to_db.user_log_info_to_db"]], "geometry_names (src.digitaltwin.get_data_using_geoapis.mfe attribute)": [[4, "src.digitaltwin.get_data_using_geoapis.MFE.GEOMETRY_NAMES"]], "mfe (class in src.digitaltwin.get_data_using_geoapis)": [[4, "src.digitaltwin.get_data_using_geoapis.MFE"]], "netloc_api (src.digitaltwin.get_data_using_geoapis.mfe attribute)": [[4, "src.digitaltwin.get_data_using_geoapis.MFE.NETLOC_API"]], "clean_fetched_vector_data() (in module src.digitaltwin.get_data_using_geoapis)": [[4, "src.digitaltwin.get_data_using_geoapis.clean_fetched_vector_data"]], "fetch_vector_data_using_geoapis() (in module src.digitaltwin.get_data_using_geoapis)": [[4, "src.digitaltwin.get_data_using_geoapis.fetch_vector_data_using_geoapis"]], "src.digitaltwin.get_data_using_geoapis": [[4, "module-src.digitaltwin.get_data_using_geoapis"]], "src.digitaltwin": [[5, "module-src.digitaltwin"]], "get_existing_geospatial_layers() (in module src.digitaltwin.instructions_records_to_db)": [[6, "src.digitaltwin.instructions_records_to_db.get_existing_geospatial_layers"]], "get_non_existing_records() (in module src.digitaltwin.instructions_records_to_db)": [[6, "src.digitaltwin.instructions_records_to_db.get_non_existing_records"]], "log (in module src.digitaltwin.instructions_records_to_db)": [[6, "src.digitaltwin.instructions_records_to_db.log"]], "read_and_check_instructions_file() (in module src.digitaltwin.instructions_records_to_db)": [[6, "src.digitaltwin.instructions_records_to_db.read_and_check_instructions_file"]], "src.digitaltwin.instructions_records_to_db": [[6, "module-src.digitaltwin.instructions_records_to_db"]], "store_instructions_records_to_db() (in module src.digitaltwin.instructions_records_to_db)": [[6, "src.digitaltwin.instructions_records_to_db.store_instructions_records_to_db"]], "validate_instruction_fields() (in module src.digitaltwin.instructions_records_to_db)": [[6, "src.digitaltwin.instructions_records_to_db.validate_instruction_fields"]], "validate_url_reachability() (in module src.digitaltwin.instructions_records_to_db)": [[6, "src.digitaltwin.instructions_records_to_db.validate_url_reachability"]], "main() (in module src.digitaltwin.run)": [[7, "src.digitaltwin.run.main"]], "sample_polygon (in module src.digitaltwin.run)": [[7, "src.digitaltwin.run.sample_polygon"]], "src.digitaltwin.run": [[7, "module-src.digitaltwin.run"]], "base (in module src.digitaltwin.setup_environment)": [[8, "src.digitaltwin.setup_environment.Base"]], "get_connection_from_profile() (in module src.digitaltwin.setup_environment)": [[8, "src.digitaltwin.setup_environment.get_connection_from_profile"]], "get_database() (in module src.digitaltwin.setup_environment)": [[8, "src.digitaltwin.setup_environment.get_database"]], "get_engine() (in module src.digitaltwin.setup_environment)": [[8, "src.digitaltwin.setup_environment.get_engine"]], "log (in module src.digitaltwin.setup_environment)": [[8, "src.digitaltwin.setup_environment.log"]], "src.digitaltwin.setup_environment": [[8, "module-src.digitaltwin.setup_environment"]], "bgfloodmodeloutput (class in src.digitaltwin.tables)": [[9, "src.digitaltwin.tables.BGFloodModelOutput"]], "base (in module src.digitaltwin.tables)": [[9, "src.digitaltwin.tables.Base"]], "geospatiallayers (class in src.digitaltwin.tables)": [[9, "src.digitaltwin.tables.GeospatialLayers"]], "hydrodem (class in src.digitaltwin.tables)": [[9, "src.digitaltwin.tables.HydroDEM"]], "userloginfo (class in src.digitaltwin.tables)": [[9, "src.digitaltwin.tables.UserLogInfo"]], "__tablename__ (src.digitaltwin.tables.bgfloodmodeloutput attribute)": [[9, "id19"], [9, "src.digitaltwin.tables.BGFloodModelOutput.__tablename__"]], "__tablename__ (src.digitaltwin.tables.geospatiallayers attribute)": [[9, "id0"], [9, "src.digitaltwin.tables.GeospatialLayers.__tablename__"]], "__tablename__ (src.digitaltwin.tables.hydrodem attribute)": [[9, "id13"], [9, "src.digitaltwin.tables.HydroDEM.__tablename__"]], "__tablename__ (src.digitaltwin.tables.userloginfo attribute)": [[9, "id8"], [9, "src.digitaltwin.tables.UserLogInfo.__tablename__"]], "check_table_exists() (in module src.digitaltwin.tables)": [[9, "src.digitaltwin.tables.check_table_exists"]], "coverage_area (src.digitaltwin.tables.geospatiallayers attribute)": [[9, "id6"], [9, "src.digitaltwin.tables.GeospatialLayers.coverage_area"]], "create_table() (in module src.digitaltwin.tables)": [[9, "src.digitaltwin.tables.create_table"]], "created_at (src.digitaltwin.tables.bgfloodmodeloutput attribute)": [[9, "id23"], [9, "src.digitaltwin.tables.BGFloodModelOutput.created_at"]], "created_at (src.digitaltwin.tables.hydrodem attribute)": [[9, "id17"], [9, "src.digitaltwin.tables.HydroDEM.created_at"]], "created_at (src.digitaltwin.tables.userloginfo attribute)": [[9, "id11"], [9, "src.digitaltwin.tables.UserLogInfo.created_at"]], "data_provider (src.digitaltwin.tables.geospatiallayers attribute)": [[9, "id2"], [9, "src.digitaltwin.tables.GeospatialLayers.data_provider"]], "execute_query() (in module src.digitaltwin.tables)": [[9, "src.digitaltwin.tables.execute_query"]], "file_name (src.digitaltwin.tables.bgfloodmodeloutput attribute)": [[9, "id21"], [9, "src.digitaltwin.tables.BGFloodModelOutput.file_name"]], "file_name (src.digitaltwin.tables.hydrodem attribute)": [[9, "id15"], [9, "src.digitaltwin.tables.HydroDEM.file_name"]], "file_path (src.digitaltwin.tables.bgfloodmodeloutput attribute)": [[9, "id22"], [9, "src.digitaltwin.tables.BGFloodModelOutput.file_path"]], "file_path (src.digitaltwin.tables.hydrodem attribute)": [[9, "id16"], [9, "src.digitaltwin.tables.HydroDEM.file_path"]], "geometry (src.digitaltwin.tables.bgfloodmodeloutput attribute)": [[9, "id24"], [9, "src.digitaltwin.tables.BGFloodModelOutput.geometry"]], "geometry (src.digitaltwin.tables.hydrodem attribute)": [[9, "id18"], [9, "src.digitaltwin.tables.HydroDEM.geometry"]], "geometry (src.digitaltwin.tables.userloginfo attribute)": [[9, "id12"], [9, "src.digitaltwin.tables.UserLogInfo.geometry"]], "layer_id (src.digitaltwin.tables.geospatiallayers attribute)": [[9, "id3"], [9, "src.digitaltwin.tables.GeospatialLayers.layer_id"]], "source_table_list (src.digitaltwin.tables.userloginfo attribute)": [[9, "id10"], [9, "src.digitaltwin.tables.UserLogInfo.source_table_list"]], "src.digitaltwin.tables": [[9, "module-src.digitaltwin.tables"]], "table_name (src.digitaltwin.tables.geospatiallayers attribute)": [[9, "id4"], [9, "src.digitaltwin.tables.GeospatialLayers.table_name"]], "unique_column_name (src.digitaltwin.tables.geospatiallayers attribute)": [[9, "id5"], [9, "src.digitaltwin.tables.GeospatialLayers.unique_column_name"]], "unique_id (src.digitaltwin.tables.bgfloodmodeloutput attribute)": [[9, "id20"], [9, "src.digitaltwin.tables.BGFloodModelOutput.unique_id"]], "unique_id (src.digitaltwin.tables.geospatiallayers attribute)": [[9, "id1"], [9, "src.digitaltwin.tables.GeospatialLayers.unique_id"]], "unique_id (src.digitaltwin.tables.hydrodem attribute)": [[9, "id14"], [9, "src.digitaltwin.tables.HydroDEM.unique_id"]], "unique_id (src.digitaltwin.tables.userloginfo attribute)": [[9, "id9"], [9, "src.digitaltwin.tables.UserLogInfo.unique_id"]], "url (src.digitaltwin.tables.geospatiallayers attribute)": [[9, "id7"], [9, "src.digitaltwin.tables.GeospatialLayers.url"]], "critical (src.digitaltwin.utils.loglevel attribute)": [[10, "id0"], [10, "src.digitaltwin.utils.LogLevel.CRITICAL"]], "debug (src.digitaltwin.utils.loglevel attribute)": [[10, "id4"], [10, "src.digitaltwin.utils.LogLevel.DEBUG"]], "error (src.digitaltwin.utils.loglevel attribute)": [[10, "id1"], [10, "src.digitaltwin.utils.LogLevel.ERROR"]], "info (src.digitaltwin.utils.loglevel attribute)": [[10, "id3"], [10, "src.digitaltwin.utils.LogLevel.INFO"]], "loglevel (class in src.digitaltwin.utils)": [[10, "src.digitaltwin.utils.LogLevel"]], "notset (src.digitaltwin.utils.loglevel attribute)": [[10, "id5"], [10, "src.digitaltwin.utils.LogLevel.NOTSET"]], "warning (src.digitaltwin.utils.loglevel attribute)": [[10, "id2"], [10, "src.digitaltwin.utils.LogLevel.WARNING"]], "get_catchment_area() (in module src.digitaltwin.utils)": [[10, "src.digitaltwin.utils.get_catchment_area"]], "get_nz_boundary() (in module src.digitaltwin.utils)": [[10, "src.digitaltwin.utils.get_nz_boundary"]], "log (in module src.digitaltwin.utils)": [[10, "src.digitaltwin.utils.log"]], "log_execution_info() (in module src.digitaltwin.utils)": [[10, "src.digitaltwin.utils.log_execution_info"]], "setup_logging() (in module src.digitaltwin.utils)": [[10, "src.digitaltwin.utils.setup_logging"]], "src.digitaltwin.utils": [[10, "module-src.digitaltwin.utils"]], "filter_for_duration() (in module src.dynamic_boundary_conditions.hirds_rainfall_data_from_db)": [[11, "src.dynamic_boundary_conditions.hirds_rainfall_data_from_db.filter_for_duration"]], "get_one_site_rainfall_data() (in module src.dynamic_boundary_conditions.hirds_rainfall_data_from_db)": [[11, "src.dynamic_boundary_conditions.hirds_rainfall_data_from_db.get_one_site_rainfall_data"]], "rainfall_data_from_db() (in module src.dynamic_boundary_conditions.hirds_rainfall_data_from_db)": [[11, "src.dynamic_boundary_conditions.hirds_rainfall_data_from_db.rainfall_data_from_db"]], "src.dynamic_boundary_conditions.hirds_rainfall_data_from_db": [[11, "module-src.dynamic_boundary_conditions.hirds_rainfall_data_from_db"]], "add_each_site_rainfall_data() (in module src.dynamic_boundary_conditions.hirds_rainfall_data_to_db)": [[12, "src.dynamic_boundary_conditions.hirds_rainfall_data_to_db.add_each_site_rainfall_data"]], "add_rainfall_data_to_db() (in module src.dynamic_boundary_conditions.hirds_rainfall_data_to_db)": [[12, "src.dynamic_boundary_conditions.hirds_rainfall_data_to_db.add_rainfall_data_to_db"]], "db_rain_table_name() (in module src.dynamic_boundary_conditions.hirds_rainfall_data_to_db)": [[12, "src.dynamic_boundary_conditions.hirds_rainfall_data_to_db.db_rain_table_name"]], "get_sites_id_in_catchment() (in module src.dynamic_boundary_conditions.hirds_rainfall_data_to_db)": [[12, "src.dynamic_boundary_conditions.hirds_rainfall_data_to_db.get_sites_id_in_catchment"]], "get_sites_id_not_in_db() (in module src.dynamic_boundary_conditions.hirds_rainfall_data_to_db)": [[12, "src.dynamic_boundary_conditions.hirds_rainfall_data_to_db.get_sites_id_not_in_db"]], "log (in module src.dynamic_boundary_conditions.hirds_rainfall_data_to_db)": [[12, "src.dynamic_boundary_conditions.hirds_rainfall_data_to_db.log"]], "rainfall_data_to_db() (in module src.dynamic_boundary_conditions.hirds_rainfall_data_to_db)": [[12, "src.dynamic_boundary_conditions.hirds_rainfall_data_to_db.rainfall_data_to_db"]], "src.dynamic_boundary_conditions.hirds_rainfall_data_to_db": [[12, "module-src.dynamic_boundary_conditions.hirds_rainfall_data_to_db"]], "clean_river_flow_data() (in module src.dynamic_boundary_conditions.hydrograph)": [[13, "src.dynamic_boundary_conditions.hydrograph.clean_river_flow_data"]], "extract_valid_ari_values() (in module src.dynamic_boundary_conditions.hydrograph)": [[13, "src.dynamic_boundary_conditions.hydrograph.extract_valid_ari_values"]], "get_hydrograph_data() (in module src.dynamic_boundary_conditions.hydrograph)": [[13, "src.dynamic_boundary_conditions.hydrograph.get_hydrograph_data"]], "get_river_flow_scenario_data() (in module src.dynamic_boundary_conditions.hydrograph)": [[13, "src.dynamic_boundary_conditions.hydrograph.get_river_flow_scenario_data"]], "src.dynamic_boundary_conditions.hydrograph": [[13, "module-src.dynamic_boundary_conditions.hydrograph"]], "add_time_information() (in module src.dynamic_boundary_conditions.hyetograph)": [[14, "src.dynamic_boundary_conditions.hyetograph.add_time_information"]], "get_hyetograph_data() (in module src.dynamic_boundary_conditions.hyetograph)": [[14, "src.dynamic_boundary_conditions.hyetograph.get_hyetograph_data"]], "get_interp_incremental_data() (in module src.dynamic_boundary_conditions.hyetograph)": [[14, "src.dynamic_boundary_conditions.hyetograph.get_interp_incremental_data"]], "get_interpolated_data() (in module src.dynamic_boundary_conditions.hyetograph)": [[14, "src.dynamic_boundary_conditions.hyetograph.get_interpolated_data"]], "get_storm_length_increment_data() (in module src.dynamic_boundary_conditions.hyetograph)": [[14, "src.dynamic_boundary_conditions.hyetograph.get_storm_length_increment_data"]], "get_transposed_data() (in module src.dynamic_boundary_conditions.hyetograph)": [[14, "src.dynamic_boundary_conditions.hyetograph.get_transposed_data"]], "hyetograph() (in module src.dynamic_boundary_conditions.hyetograph)": [[14, "src.dynamic_boundary_conditions.hyetograph.hyetograph"]], "hyetograph_data_wide_to_long() (in module src.dynamic_boundary_conditions.hyetograph)": [[14, "src.dynamic_boundary_conditions.hyetograph.hyetograph_data_wide_to_long"]], "hyetograph_depth_to_intensity() (in module src.dynamic_boundary_conditions.hyetograph)": [[14, "src.dynamic_boundary_conditions.hyetograph.hyetograph_depth_to_intensity"]], "src.dynamic_boundary_conditions.hyetograph": [[14, "module-src.dynamic_boundary_conditions.hyetograph"]], "transform_data_for_selected_method() (in module src.dynamic_boundary_conditions.hyetograph)": [[14, "src.dynamic_boundary_conditions.hyetograph.transform_data_for_selected_method"]], "src.dynamic_boundary_conditions": [[15, "module-src.dynamic_boundary_conditions"]], "main() (in module src.dynamic_boundary_conditions.main_rainfall)": [[16, "src.dynamic_boundary_conditions.main_rainfall.main"]], "remove_existing_rain_inputs() (in module src.dynamic_boundary_conditions.main_rainfall)": [[16, "src.dynamic_boundary_conditions.main_rainfall.remove_existing_rain_inputs"]], "sample_polygon (in module src.dynamic_boundary_conditions.main_rainfall)": [[16, "src.dynamic_boundary_conditions.main_rainfall.sample_polygon"]], "src.dynamic_boundary_conditions.main_rainfall": [[16, "module-src.dynamic_boundary_conditions.main_rainfall"]], "get_catchment_boundary_lines() (in module src.dynamic_boundary_conditions.main_river)": [[17, "src.dynamic_boundary_conditions.main_river.get_catchment_boundary_lines"]], "main() (in module src.dynamic_boundary_conditions.main_river)": [[17, "src.dynamic_boundary_conditions.main_river.main"]], "remove_existing_river_inputs() (in module src.dynamic_boundary_conditions.main_river)": [[17, "src.dynamic_boundary_conditions.main_river.remove_existing_river_inputs"]], "sample_polygon (in module src.dynamic_boundary_conditions.main_river)": [[17, "src.dynamic_boundary_conditions.main_river.sample_polygon"]], "src.dynamic_boundary_conditions.main_river": [[17, "module-src.dynamic_boundary_conditions.main_river"]], "log (in module src.dynamic_boundary_conditions.main_tide_slr)": [[18, "src.dynamic_boundary_conditions.main_tide_slr.log"]], "main() (in module src.dynamic_boundary_conditions.main_tide_slr)": [[18, "src.dynamic_boundary_conditions.main_tide_slr.main"]], "remove_existing_boundary_inputs() (in module src.dynamic_boundary_conditions.main_tide_slr)": [[18, "src.dynamic_boundary_conditions.main_tide_slr.remove_existing_boundary_inputs"]], "sample_polygon (in module src.dynamic_boundary_conditions.main_tide_slr)": [[18, "src.dynamic_boundary_conditions.main_tide_slr.sample_polygon"]], "src.dynamic_boundary_conditions.main_tide_slr": [[18, "module-src.dynamic_boundary_conditions.main_tide_slr"]], "configure_osm_cache() (in module src.dynamic_boundary_conditions.osm_waterways)": [[19, "src.dynamic_boundary_conditions.osm_waterways.configure_osm_cache"]], "fetch_osm_waterways() (in module src.dynamic_boundary_conditions.osm_waterways)": [[19, "src.dynamic_boundary_conditions.osm_waterways.fetch_osm_waterways"]], "get_osm_boundary_points_on_bbox() (in module src.dynamic_boundary_conditions.osm_waterways)": [[19, "src.dynamic_boundary_conditions.osm_waterways.get_osm_boundary_points_on_bbox"]], "get_osm_waterways_data() (in module src.dynamic_boundary_conditions.osm_waterways)": [[19, "src.dynamic_boundary_conditions.osm_waterways.get_osm_waterways_data"]], "get_osm_waterways_data_on_bbox() (in module src.dynamic_boundary_conditions.osm_waterways)": [[19, "src.dynamic_boundary_conditions.osm_waterways.get_osm_waterways_data_on_bbox"]], "src.dynamic_boundary_conditions.osm_waterways": [[19, "module-src.dynamic_boundary_conditions.osm_waterways"]], "blockstructure (class in src.dynamic_boundary_conditions.rainfall_data_from_hirds)": [[20, "src.dynamic_boundary_conditions.rainfall_data_from_hirds.BlockStructure"]], "category (src.dynamic_boundary_conditions.rainfall_data_from_hirds.blockstructure attribute)": [[20, "id3"], [20, "src.dynamic_boundary_conditions.rainfall_data_from_hirds.BlockStructure.category"]], "convert_to_tabular_data() (in module src.dynamic_boundary_conditions.rainfall_data_from_hirds)": [[20, "src.dynamic_boundary_conditions.rainfall_data_from_hirds.convert_to_tabular_data"]], "get_data_from_hirds() (in module src.dynamic_boundary_conditions.rainfall_data_from_hirds)": [[20, "src.dynamic_boundary_conditions.rainfall_data_from_hirds.get_data_from_hirds"]], "get_layout_structure_of_data() (in module src.dynamic_boundary_conditions.rainfall_data_from_hirds)": [[20, "src.dynamic_boundary_conditions.rainfall_data_from_hirds.get_layout_structure_of_data"]], "get_site_url_key() (in module src.dynamic_boundary_conditions.rainfall_data_from_hirds)": [[20, "src.dynamic_boundary_conditions.rainfall_data_from_hirds.get_site_url_key"]], "rcp (src.dynamic_boundary_conditions.rainfall_data_from_hirds.blockstructure attribute)": [[20, "id1"], [20, "src.dynamic_boundary_conditions.rainfall_data_from_hirds.BlockStructure.rcp"]], "skip_rows (src.dynamic_boundary_conditions.rainfall_data_from_hirds.blockstructure attribute)": [[20, "id0"], [20, "src.dynamic_boundary_conditions.rainfall_data_from_hirds.BlockStructure.skip_rows"]], "src.dynamic_boundary_conditions.rainfall_data_from_hirds": [[20, "module-src.dynamic_boundary_conditions.rainfall_data_from_hirds"]], "time_period (src.dynamic_boundary_conditions.rainfall_data_from_hirds.blockstructure attribute)": [[20, "id2"], [20, "src.dynamic_boundary_conditions.rainfall_data_from_hirds.BlockStructure.time_period"]], "alt_block (src.dynamic_boundary_conditions.rainfall_enum.hyetomethod attribute)": [[21, "id0"], [21, "src.dynamic_boundary_conditions.rainfall_enum.HyetoMethod.ALT_BLOCK"]], "chicago (src.dynamic_boundary_conditions.rainfall_enum.hyetomethod attribute)": [[21, "id1"], [21, "src.dynamic_boundary_conditions.rainfall_enum.HyetoMethod.CHICAGO"]], "hyetomethod (class in src.dynamic_boundary_conditions.rainfall_enum)": [[21, "src.dynamic_boundary_conditions.rainfall_enum.HyetoMethod"]], "raininputtype (class in src.dynamic_boundary_conditions.rainfall_enum)": [[21, "src.dynamic_boundary_conditions.rainfall_enum.RainInputType"]], "uniform (src.dynamic_boundary_conditions.rainfall_enum.raininputtype attribute)": [[21, "id2"], [21, "src.dynamic_boundary_conditions.rainfall_enum.RainInputType.UNIFORM"]], "varying (src.dynamic_boundary_conditions.rainfall_enum.raininputtype attribute)": [[21, "id3"], [21, "src.dynamic_boundary_conditions.rainfall_enum.RainInputType.VARYING"]], "src.dynamic_boundary_conditions.rainfall_enum": [[21, "module-src.dynamic_boundary_conditions.rainfall_enum"]], "create_rain_data_cube() (in module src.dynamic_boundary_conditions.rainfall_model_input)": [[22, "src.dynamic_boundary_conditions.rainfall_model_input.create_rain_data_cube"]], "generate_rain_model_input() (in module src.dynamic_boundary_conditions.rainfall_model_input)": [[22, "src.dynamic_boundary_conditions.rainfall_model_input.generate_rain_model_input"]], "log (in module src.dynamic_boundary_conditions.rainfall_model_input)": [[22, "src.dynamic_boundary_conditions.rainfall_model_input.log"]], "mean_catchment_rainfall() (in module src.dynamic_boundary_conditions.rainfall_model_input)": [[22, "src.dynamic_boundary_conditions.rainfall_model_input.mean_catchment_rainfall"]], "sites_coverage_in_catchment() (in module src.dynamic_boundary_conditions.rainfall_model_input)": [[22, "src.dynamic_boundary_conditions.rainfall_model_input.sites_coverage_in_catchment"]], "sites_voronoi_intersect_catchment() (in module src.dynamic_boundary_conditions.rainfall_model_input)": [[22, "src.dynamic_boundary_conditions.rainfall_model_input.sites_voronoi_intersect_catchment"]], "spatial_uniform_rain_input() (in module src.dynamic_boundary_conditions.rainfall_model_input)": [[22, "src.dynamic_boundary_conditions.rainfall_model_input.spatial_uniform_rain_input"]], "spatial_varying_rain_input() (in module src.dynamic_boundary_conditions.rainfall_model_input)": [[22, "src.dynamic_boundary_conditions.rainfall_model_input.spatial_varying_rain_input"]], "src.dynamic_boundary_conditions.rainfall_model_input": [[22, "module-src.dynamic_boundary_conditions.rainfall_model_input"]], "get_rainfall_sites_data() (in module src.dynamic_boundary_conditions.rainfall_sites)": [[23, "src.dynamic_boundary_conditions.rainfall_sites.get_rainfall_sites_data"]], "get_rainfall_sites_in_df() (in module src.dynamic_boundary_conditions.rainfall_sites)": [[23, "src.dynamic_boundary_conditions.rainfall_sites.get_rainfall_sites_in_df"]], "log (in module src.dynamic_boundary_conditions.rainfall_sites)": [[23, "src.dynamic_boundary_conditions.rainfall_sites.log"]], "rainfall_sites_to_db() (in module src.dynamic_boundary_conditions.rainfall_sites)": [[23, "src.dynamic_boundary_conditions.rainfall_sites.rainfall_sites_to_db"]], "src.dynamic_boundary_conditions.rainfall_sites": [[23, "module-src.dynamic_boundary_conditions.rainfall_sites"]], "find_closest_osm_waterways() (in module src.dynamic_boundary_conditions.rec1_osm_match)": [[24, "src.dynamic_boundary_conditions.rec1_osm_match.find_closest_osm_waterways"]], "get_closest_osm_waterways_with_target_locations() (in module src.dynamic_boundary_conditions.rec1_osm_match)": [[24, "src.dynamic_boundary_conditions.rec1_osm_match.get_closest_osm_waterways_with_target_locations"]], "get_elevations_from_hydro_dem() (in module src.dynamic_boundary_conditions.rec1_osm_match)": [[24, "src.dynamic_boundary_conditions.rec1_osm_match.get_elevations_from_hydro_dem"]], "get_matched_data_with_target_locations() (in module src.dynamic_boundary_conditions.rec1_osm_match)": [[24, "src.dynamic_boundary_conditions.rec1_osm_match.get_matched_data_with_target_locations"]], "get_target_location_from_hydro_dem() (in module src.dynamic_boundary_conditions.rec1_osm_match)": [[24, "src.dynamic_boundary_conditions.rec1_osm_match.get_target_location_from_hydro_dem"]], "match_rec1_river_and_osm_waterway() (in module src.dynamic_boundary_conditions.rec1_osm_match)": [[24, "src.dynamic_boundary_conditions.rec1_osm_match.match_rec1_river_and_osm_waterway"]], "src.dynamic_boundary_conditions.rec1_osm_match": [[24, "module-src.dynamic_boundary_conditions.rec1_osm_match"]], "get_rec1_data_from_db() (in module src.dynamic_boundary_conditions.river_data_to_from_db)": [[25, "src.dynamic_boundary_conditions.river_data_to_from_db.get_rec1_data_from_db"]], "get_rec1_data_from_niwa() (in module src.dynamic_boundary_conditions.river_data_to_from_db)": [[25, "src.dynamic_boundary_conditions.river_data_to_from_db.get_rec1_data_from_niwa"]], "log (in module src.dynamic_boundary_conditions.river_data_to_from_db)": [[25, "src.dynamic_boundary_conditions.river_data_to_from_db.log"]], "src.dynamic_boundary_conditions.river_data_to_from_db": [[25, "module-src.dynamic_boundary_conditions.river_data_to_from_db"]], "store_rec1_data_to_db() (in module src.dynamic_boundary_conditions.river_data_to_from_db)": [[25, "src.dynamic_boundary_conditions.river_data_to_from_db.store_rec1_data_to_db"]], "boundtype (class in src.dynamic_boundary_conditions.river_enum)": [[26, "src.dynamic_boundary_conditions.river_enum.BoundType"]], "lower (src.dynamic_boundary_conditions.river_enum.boundtype attribute)": [[26, "id0"], [26, "src.dynamic_boundary_conditions.river_enum.BoundType.LOWER"]], "middle (src.dynamic_boundary_conditions.river_enum.boundtype attribute)": [[26, "id1"], [26, "src.dynamic_boundary_conditions.river_enum.BoundType.MIDDLE"]], "upper (src.dynamic_boundary_conditions.river_enum.boundtype attribute)": [[26, "id2"], [26, "src.dynamic_boundary_conditions.river_enum.BoundType.UPPER"]], "src.dynamic_boundary_conditions.river_enum": [[26, "module-src.dynamic_boundary_conditions.river_enum"]], "generate_river_model_input() (in module src.dynamic_boundary_conditions.river_model_input)": [[27, "src.dynamic_boundary_conditions.river_model_input.generate_river_model_input"]], "log (in module src.dynamic_boundary_conditions.river_model_input)": [[27, "src.dynamic_boundary_conditions.river_model_input.log"]], "src.dynamic_boundary_conditions.river_model_input": [[27, "module-src.dynamic_boundary_conditions.river_model_input"]], "add_first_last_coords_to_rec1() (in module src.dynamic_boundary_conditions.river_network_for_aoi)": [[28, "src.dynamic_boundary_conditions.river_network_for_aoi.add_first_last_coords_to_rec1"]], "build_rec1_network() (in module src.dynamic_boundary_conditions.river_network_for_aoi)": [[28, "src.dynamic_boundary_conditions.river_network_for_aoi.build_rec1_network"]], "create_rec1_network_data() (in module src.dynamic_boundary_conditions.river_network_for_aoi)": [[28, "src.dynamic_boundary_conditions.river_network_for_aoi.create_rec1_network_data"]], "get_rec1_boundary_points_on_bbox() (in module src.dynamic_boundary_conditions.river_network_for_aoi)": [[28, "src.dynamic_boundary_conditions.river_network_for_aoi.get_rec1_boundary_points_on_bbox"]], "get_rec1_network_data_on_bbox() (in module src.dynamic_boundary_conditions.river_network_for_aoi)": [[28, "src.dynamic_boundary_conditions.river_network_for_aoi.get_rec1_network_data_on_bbox"]], "get_unique_nodes_dict() (in module src.dynamic_boundary_conditions.river_network_for_aoi)": [[28, "src.dynamic_boundary_conditions.river_network_for_aoi.get_unique_nodes_dict"]], "src.dynamic_boundary_conditions.river_network_for_aoi": [[28, "module-src.dynamic_boundary_conditions.river_network_for_aoi"]], "get_closest_slr_data() (in module src.dynamic_boundary_conditions.sea_level_rise_data)": [[29, "src.dynamic_boundary_conditions.sea_level_rise_data.get_closest_slr_data"]], "get_slr_data_from_db() (in module src.dynamic_boundary_conditions.sea_level_rise_data)": [[29, "src.dynamic_boundary_conditions.sea_level_rise_data.get_slr_data_from_db"]], "get_slr_data_from_nz_searise() (in module src.dynamic_boundary_conditions.sea_level_rise_data)": [[29, "src.dynamic_boundary_conditions.sea_level_rise_data.get_slr_data_from_nz_searise"]], "log (in module src.dynamic_boundary_conditions.sea_level_rise_data)": [[29, "src.dynamic_boundary_conditions.sea_level_rise_data.log"]], "src.dynamic_boundary_conditions.sea_level_rise_data": [[29, "module-src.dynamic_boundary_conditions.sea_level_rise_data"]], "store_slr_data_to_db() (in module src.dynamic_boundary_conditions.sea_level_rise_data)": [[29, "src.dynamic_boundary_conditions.sea_level_rise_data.store_slr_data_to_db"]], "get_sites_within_aoi() (in module src.dynamic_boundary_conditions.thiessen_polygons)": [[30, "src.dynamic_boundary_conditions.thiessen_polygons.get_sites_within_aoi"]], "log (in module src.dynamic_boundary_conditions.thiessen_polygons)": [[30, "src.dynamic_boundary_conditions.thiessen_polygons.log"]], "src.dynamic_boundary_conditions.thiessen_polygons": [[30, "module-src.dynamic_boundary_conditions.thiessen_polygons"]], "thiessen_polygons_calculator() (in module src.dynamic_boundary_conditions.thiessen_polygons)": [[30, "src.dynamic_boundary_conditions.thiessen_polygons.thiessen_polygons_calculator"]], "thiessen_polygons_from_db() (in module src.dynamic_boundary_conditions.thiessen_polygons)": [[30, "src.dynamic_boundary_conditions.thiessen_polygons.thiessen_polygons_from_db"]], "thiessen_polygons_to_db() (in module src.dynamic_boundary_conditions.thiessen_polygons)": [[30, "src.dynamic_boundary_conditions.thiessen_polygons.thiessen_polygons_to_db"]], "tide_api_url_data (in module src.dynamic_boundary_conditions.tide_data_from_niwa)": [[31, "src.dynamic_boundary_conditions.tide_data_from_niwa.TIDE_API_URL_DATA"]], "tide_api_url_data_csv (in module src.dynamic_boundary_conditions.tide_data_from_niwa)": [[31, "src.dynamic_boundary_conditions.tide_data_from_niwa.TIDE_API_URL_DATA_CSV"]], "add_time_information() (in module src.dynamic_boundary_conditions.tide_data_from_niwa)": [[31, "src.dynamic_boundary_conditions.tide_data_from_niwa.add_time_information"]], "convert_to_nz_timezone() (in module src.dynamic_boundary_conditions.tide_data_from_niwa)": [[31, "src.dynamic_boundary_conditions.tide_data_from_niwa.convert_to_nz_timezone"]], "fetch_tide_data() (in module src.dynamic_boundary_conditions.tide_data_from_niwa)": [[31, "src.dynamic_boundary_conditions.tide_data_from_niwa.fetch_tide_data"]], "fetch_tide_data_around_highest_tide() (in module src.dynamic_boundary_conditions.tide_data_from_niwa)": [[31, "src.dynamic_boundary_conditions.tide_data_from_niwa.fetch_tide_data_around_highest_tide"]], "fetch_tide_data_for_requested_period() (in module src.dynamic_boundary_conditions.tide_data_from_niwa)": [[31, "src.dynamic_boundary_conditions.tide_data_from_niwa.fetch_tide_data_for_requested_period"]], "fetch_tide_data_from_niwa() (in module src.dynamic_boundary_conditions.tide_data_from_niwa)": [[31, "src.dynamic_boundary_conditions.tide_data_from_niwa.fetch_tide_data_from_niwa"]], "gen_api_query_param_list() (in module src.dynamic_boundary_conditions.tide_data_from_niwa)": [[31, "src.dynamic_boundary_conditions.tide_data_from_niwa.gen_api_query_param_list"]], "get_date_ranges() (in module src.dynamic_boundary_conditions.tide_data_from_niwa)": [[31, "src.dynamic_boundary_conditions.tide_data_from_niwa.get_date_ranges"]], "get_highest_tide_date_span() (in module src.dynamic_boundary_conditions.tide_data_from_niwa)": [[31, "src.dynamic_boundary_conditions.tide_data_from_niwa.get_highest_tide_date_span"]], "get_highest_tide_datetime() (in module src.dynamic_boundary_conditions.tide_data_from_niwa)": [[31, "src.dynamic_boundary_conditions.tide_data_from_niwa.get_highest_tide_datetime"]], "get_highest_tide_datetime_span() (in module src.dynamic_boundary_conditions.tide_data_from_niwa)": [[31, "src.dynamic_boundary_conditions.tide_data_from_niwa.get_highest_tide_datetime_span"]], "get_query_loc_coords_position() (in module src.dynamic_boundary_conditions.tide_data_from_niwa)": [[31, "src.dynamic_boundary_conditions.tide_data_from_niwa.get_query_loc_coords_position"]], "get_tide_data() (in module src.dynamic_boundary_conditions.tide_data_from_niwa)": [[31, "src.dynamic_boundary_conditions.tide_data_from_niwa.get_tide_data"]], "get_time_mins_to_add() (in module src.dynamic_boundary_conditions.tide_data_from_niwa)": [[31, "src.dynamic_boundary_conditions.tide_data_from_niwa.get_time_mins_to_add"]], "src.dynamic_boundary_conditions.tide_data_from_niwa": [[31, "module-src.dynamic_boundary_conditions.tide_data_from_niwa"]], "approachtype (class in src.dynamic_boundary_conditions.tide_enum)": [[32, "src.dynamic_boundary_conditions.tide_enum.ApproachType"]], "datumtype (class in src.dynamic_boundary_conditions.tide_enum)": [[32, "src.dynamic_boundary_conditions.tide_enum.DatumType"]], "king_tide (src.dynamic_boundary_conditions.tide_enum.approachtype attribute)": [[32, "id2"], [32, "src.dynamic_boundary_conditions.tide_enum.ApproachType.KING_TIDE"]], "lat (src.dynamic_boundary_conditions.tide_enum.datumtype attribute)": [[32, "id0"], [32, "src.dynamic_boundary_conditions.tide_enum.DatumType.LAT"]], "msl (src.dynamic_boundary_conditions.tide_enum.datumtype attribute)": [[32, "id1"], [32, "src.dynamic_boundary_conditions.tide_enum.DatumType.MSL"]], "period_tide (src.dynamic_boundary_conditions.tide_enum.approachtype attribute)": [[32, "id3"], [32, "src.dynamic_boundary_conditions.tide_enum.ApproachType.PERIOD_TIDE"]], "src.dynamic_boundary_conditions.tide_enum": [[32, "module-src.dynamic_boundary_conditions.tide_enum"]], "notidedataexception": [[33, "src.dynamic_boundary_conditions.tide_query_location.NoTideDataException"]], "get_catchment_boundary_centroids() (in module src.dynamic_boundary_conditions.tide_query_location)": [[33, "src.dynamic_boundary_conditions.tide_query_location.get_catchment_boundary_centroids"]], "get_catchment_boundary_info() (in module src.dynamic_boundary_conditions.tide_query_location)": [[33, "src.dynamic_boundary_conditions.tide_query_location.get_catchment_boundary_info"]], "get_catchment_boundary_lines() (in module src.dynamic_boundary_conditions.tide_query_location)": [[33, "src.dynamic_boundary_conditions.tide_query_location.get_catchment_boundary_lines"]], "get_non_intersection_centroid_position() (in module src.dynamic_boundary_conditions.tide_query_location)": [[33, "src.dynamic_boundary_conditions.tide_query_location.get_non_intersection_centroid_position"]], "get_nz_coastline_from_db() (in module src.dynamic_boundary_conditions.tide_query_location)": [[33, "src.dynamic_boundary_conditions.tide_query_location.get_nz_coastline_from_db"]], "get_regional_council_clipped_from_db() (in module src.dynamic_boundary_conditions.tide_query_location)": [[33, "src.dynamic_boundary_conditions.tide_query_location.get_regional_council_clipped_from_db"]], "get_tide_query_locations() (in module src.dynamic_boundary_conditions.tide_query_location)": [[33, "src.dynamic_boundary_conditions.tide_query_location.get_tide_query_locations"]], "src.dynamic_boundary_conditions.tide_query_location": [[33, "module-src.dynamic_boundary_conditions.tide_query_location"]], "add_slr_to_tide() (in module src.dynamic_boundary_conditions.tide_slr_combine)": [[34, "src.dynamic_boundary_conditions.tide_slr_combine.add_slr_to_tide"]], "get_combined_tide_slr_data() (in module src.dynamic_boundary_conditions.tide_slr_combine)": [[34, "src.dynamic_boundary_conditions.tide_slr_combine.get_combined_tide_slr_data"]], "get_interpolated_slr_scenario_data() (in module src.dynamic_boundary_conditions.tide_slr_combine)": [[34, "src.dynamic_boundary_conditions.tide_slr_combine.get_interpolated_slr_scenario_data"]], "get_slr_scenario_data() (in module src.dynamic_boundary_conditions.tide_slr_combine)": [[34, "src.dynamic_boundary_conditions.tide_slr_combine.get_slr_scenario_data"]], "split_slr_measurementname_column() (in module src.dynamic_boundary_conditions.tide_slr_combine)": [[34, "src.dynamic_boundary_conditions.tide_slr_combine.split_slr_measurementname_column"]], "src.dynamic_boundary_conditions.tide_slr_combine": [[34, "module-src.dynamic_boundary_conditions.tide_slr_combine"]], "generate_uniform_boundary_input() (in module src.dynamic_boundary_conditions.tide_slr_model_input)": [[35, "src.dynamic_boundary_conditions.tide_slr_model_input.generate_uniform_boundary_input"]], "log (in module src.dynamic_boundary_conditions.tide_slr_model_input)": [[35, "src.dynamic_boundary_conditions.tide_slr_model_input.log"]], "src.dynamic_boundary_conditions.tide_slr_model_input": [[35, "module-src.dynamic_boundary_conditions.tide_slr_model_input"]], "base (in module src.flood_model.bg_flood_model)": [[36, "src.flood_model.bg_flood_model.Base"]], "add_crs_to_latest_model_output() (in module src.flood_model.bg_flood_model)": [[36, "src.flood_model.bg_flood_model.add_crs_to_latest_model_output"]], "get_model_output_metadata() (in module src.flood_model.bg_flood_model)": [[36, "src.flood_model.bg_flood_model.get_model_output_metadata"]], "get_new_model_output_path() (in module src.flood_model.bg_flood_model)": [[36, "src.flood_model.bg_flood_model.get_new_model_output_path"]], "get_valid_bg_flood_dir() (in module src.flood_model.bg_flood_model)": [[36, "src.flood_model.bg_flood_model.get_valid_bg_flood_dir"]], "latest_model_output_from_db() (in module src.flood_model.bg_flood_model)": [[36, "src.flood_model.bg_flood_model.latest_model_output_from_db"]], "log (in module src.flood_model.bg_flood_model)": [[36, "src.flood_model.bg_flood_model.log"]], "main() (in module src.flood_model.bg_flood_model)": [[36, "src.flood_model.bg_flood_model.main"]], "prepare_bg_flood_model_inputs() (in module src.flood_model.bg_flood_model)": [[36, "src.flood_model.bg_flood_model.prepare_bg_flood_model_inputs"]], "process_boundary_input_files() (in module src.flood_model.bg_flood_model)": [[36, "src.flood_model.bg_flood_model.process_boundary_input_files"]], "process_rain_input_files() (in module src.flood_model.bg_flood_model)": [[36, "src.flood_model.bg_flood_model.process_rain_input_files"]], "process_river_input_files() (in module src.flood_model.bg_flood_model)": [[36, "src.flood_model.bg_flood_model.process_river_input_files"]], "run_bg_flood_model() (in module src.flood_model.bg_flood_model)": [[36, "src.flood_model.bg_flood_model.run_bg_flood_model"]], "sample_polygon (in module src.flood_model.bg_flood_model)": [[36, "src.flood_model.bg_flood_model.sample_polygon"]], "src.flood_model.bg_flood_model": [[36, "module-src.flood_model.bg_flood_model"]], "store_model_output_metadata_to_db() (in module src.flood_model.bg_flood_model)": [[36, "src.flood_model.bg_flood_model.store_model_output_metadata_to_db"]], "src.flood_model": [[37, "module-src.flood_model"]], "geoserver_rest_url (in module src.flood_model.serve_model)": [[38, "src.flood_model.serve_model.GEOSERVER_REST_URL"]], "add_gtiff_to_geoserver() (in module src.flood_model.serve_model)": [[38, "src.flood_model.serve_model.add_gtiff_to_geoserver"]], "add_model_output_to_geoserver() (in module src.flood_model.serve_model)": [[38, "src.flood_model.serve_model.add_model_output_to_geoserver"]], "convert_nc_to_gtiff() (in module src.flood_model.serve_model)": [[38, "src.flood_model.serve_model.convert_nc_to_gtiff"]], "create_layer_from_store() (in module src.flood_model.serve_model)": [[38, "src.flood_model.serve_model.create_layer_from_store"]], "src.flood_model.serve_model": [[38, "module-src.flood_model.serve_model"]], "upload_gtiff_to_store() (in module src.flood_model.serve_model)": [[38, "src.flood_model.serve_model.upload_gtiff_to_store"]], "__version__ (in module src)": [[39, "src.__version__"]], "src": [[39, "module-src"]], "main() (in module src.run_all)": [[40, "src.run_all.main"]], "module_to_log_level (in module src.run_all)": [[40, "src.run_all.module_to_log_level"]], "src.run_all": [[40, "module-src.run_all"]], "onfailurestatetask (class in src.tasks)": [[41, "src.tasks.OnFailureStateTask"]], "app (in module src.tasks)": [[41, "src.tasks.app"]], "create_model_for_area() (in module src.tasks)": [[41, "src.tasks.create_model_for_area"]], "generate_rainfall_inputs() (in module src.tasks)": [[41, "src.tasks.generate_rainfall_inputs"]], "initialise_db_with_region_geometries() (in module src.tasks)": [[41, "src.tasks.initialise_db_with_region_geometries"]], "message_broker_url (in module src.tasks)": [[41, "src.tasks.message_broker_url"]], "on_failure() (src.tasks.onfailurestatetask method)": [[41, "src.tasks.OnFailureStateTask.on_failure"]], "run_flood_model() (in module src.tasks)": [[41, "src.tasks.run_flood_model"]], "src.tasks": [[41, "module-src.tasks"]], "wkt_to_gdf() (in module src.tasks)": [[41, "src.tasks.wkt_to_gdf"]]}})