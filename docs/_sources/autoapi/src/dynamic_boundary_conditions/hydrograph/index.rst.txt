:py:mod:`src.dynamic_boundary_conditions.hydrograph`
====================================================

.. py:module:: src.dynamic_boundary_conditions.hydrograph

.. autoapi-nested-parse::

   This script obtains river flow scenario data, whether Mean Annual Flood (MAF) or
   Average Recurrence Interval (ARI)-based, and generates corresponding hydrograph data for the requested scenarios.



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   src.dynamic_boundary_conditions.hydrograph.clean_river_flow_data
   src.dynamic_boundary_conditions.hydrograph.extract_valid_ari_values
   src.dynamic_boundary_conditions.hydrograph.get_river_flow_scenario_data
   src.dynamic_boundary_conditions.hydrograph.get_hydrograph_data



.. py:function:: clean_river_flow_data(matched_data: geopandas.GeoDataFrame) -> geopandas.GeoDataFrame

   Selects and cleans specific columns representing river flow data from the given GeoDataFrame.

   :param matched_data: A GeoDataFrame containing the matched data between REC1 rivers and OSM waterways,
                        along with the identified target locations used for the river input in the BG-Flood model.
   :type matched_data: gpd.GeoDataFrame

   :returns: A new GeoDataFrame containing the selected columns representing river flow data.
   :rtype: gpd.GeoDataFrame


.. py:function:: extract_valid_ari_values(river_flow_data: geopandas.GeoDataFrame) -> List[int]

   Extracts valid ARI (Annual Recurrence Interval) values from the column names of the river flow data.

   :param river_flow_data: A GeoDataFrame containing river flow data with column names that include ARI values.
   :type river_flow_data: gpd.GeoDataFrame

   :returns: A list of valid ARI values extracted from the column names of the river flow data.
   :rtype: List[int]


.. py:function:: get_river_flow_scenario_data(matched_data: geopandas.GeoDataFrame, maf: bool = True, ari: Optional[int] = None, bound: src.dynamic_boundary_conditions.river_enum.BoundType = BoundType.MIDDLE) -> geopandas.GeoDataFrame

   Obtain the requested river flow scenario data, which can be either Mean Annual Flood (MAF)-based or
   Average Recurrence Interval (ARI)-based scenario data.

   :param matched_data: A GeoDataFrame containing the matched data between REC1 rivers and OSM waterways,
                        along with the identified target locations used for the river input in the BG-Flood model.
   :type matched_data: gpd.GeoDataFrame
   :param maf: Set to True to obtain MAF-based scenario data or False to obtain ARI-based scenario data.
   :type maf: bool, optional
   :param ari: The Average Recurrence Interval (ARI) value. Valid options are 5, 10, 20, 50, 100, or 1000.
               Mandatory when 'maf' is set to False, and should be set to None when 'maf' is set to True.
   :type ari: int, optional
   :param bound: Set the type of bound (estimate) for the river flow scenario data.
                 Valid options include: 'BoundType.LOWER', 'BoundType.MIDDLE', or 'BoundType.UPPER'.
   :type bound: BoundType, optional

   :returns: A GeoDataFrame containing the requested river flow scenario data.
   :rtype: gpd.GeoDataFrame

   :raises ValueError: - If 'ari' is provided when 'maf' is set to True (i.e. 'maf' is True and 'ari' is not set to None).
       - If 'ari' is not provided when 'maf' is set to False (i.e. 'maf' is False and 'ari' is set to None).
       - If an invalid 'ari' value is provided.


.. py:function:: get_hydrograph_data(matched_data: geopandas.GeoDataFrame, flow_length_mins: int, time_to_peak_mins: Union[int, float], maf: bool = True, ari: Optional[int] = None, bound: src.dynamic_boundary_conditions.river_enum.BoundType = BoundType.MIDDLE) -> geopandas.GeoDataFrame

   Generate hydrograph data for the requested river flow scenario.

   :param matched_data: A GeoDataFrame containing the matched data between REC1 rivers and OSM waterways,
                        along with the identified target locations used for the river input in the BG-Flood model.
   :type matched_data: gpd.GeoDataFrame
   :param flow_length_mins: Duration of the river flow in minutes.
   :type flow_length_mins: int
   :param time_to_peak_mins: The time in minutes when flow is at its greatest (reaches maximum).
   :type time_to_peak_mins: Union[int, float]
   :param maf: Set to True to obtain MAF-based scenario data or False to obtain ARI-based scenario data.
   :type maf: bool, optional
   :param ari: The Average Recurrence Interval (ARI) value. Valid options are 5, 10, 20, 50, 100, or 1000.
               Mandatory when 'maf' is set to False, and should be set to None when 'maf' is set to True.
   :type ari: int, optional
   :param bound: Set the type of bound (estimate) for the river flow scenario data.
                 Valid options include: 'BoundType.LOWER', 'BoundType.MIDDLE', or 'BoundType.UPPER'.
   :type bound: BoundType, optional

   :returns: A GeoDataFrame containing the hydrograph data for the requested river flow scenario.
   :rtype: gpd.GeoDataFrame

   :raises ValueError: If the specified 'time_to_peak_mins' is less than half of the river flow duration.


